// Sober@0.4.2
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).sober=t()}(this,function(){"use strict";const v={CSSStyleSheet:!0};try{new CSSStyleSheet}catch(e){v.CSSStyleSheet=!1}const x=(e,t)=>{if(void 0===e)return t;if("string"==typeof t)return String(e);if("number"==typeof t)return Number(e);if("boolean"==typeof t)return"boolean"==typeof e?e:"true"===e;throw new TypeError},m=":host{ user-select: none; -webkit-user-select: none; -webkit-tap-highlight-color: transparent }";var e=f=>{var e=[];const r={};for(const s in f.props){var t=s.toLowerCase();e.push(t),r[t]=s}const u=new Map;class o extends HTMLElement{static observedAttributes=e;static define(e){customElements.define(e,this)}constructor(){super();var e,t=this.attachShadow({mode:"open"}),o=(t.innerHTML=f.template??"",t),r=f.style;if(v.CSSStyleSheet){const d=new CSSStyleSheet;d.replaceSync(m),o.adoptedStyleSheets.push(d),void(r&&((e=new CSSStyleSheet).replaceSync(r),o.adoptedStyleSheets.push(e)))}else{r&&((e=document.createElement("style")).textContent=r,o.insertBefore(e,o.firstChild));const d=document.createElement("style");d.textContent=m,o.insertBefore(d,o.firstChild)}const s={...f.props};var i={};for(const c in f.props){var a=this[c];void 0!==a&&a!==s[c]&&(i[c]=a),Object.defineProperty(this,c,{configurable:!0,get:()=>s[c],set:e=>{e=x(e,f.props[c]);if(e!==s[c]){if(!0===f.syncProps||f.syncProps?.includes(c)){var t=c.toLowerCase(),o=this.getAttribute(t),r=String(e);if(e===f.props?.[c]&&null!==o)return void this.removeAttribute(t);if(e!==f.props?.[c]&&o!==r)return void this.setAttribute(t,r)}s[c]=e,n?.props?.[c]?.(e)}}})}const n=f.setup?.apply(this,[t]);var l=Object.getOwnPropertyDescriptors(n?.expose??{});for(const p in l)Object.defineProperty(this,p,l[p]);for(const h in i)!0!==f.syncProps&&!f.syncProps?.includes(h)||this.setAttribute(h,String(x(i[h],f.props[h]))),this[h]=i[h];u.set(this,n)}connectedCallback(){u.get(this)?.mounted?.()}disconnectedCallback(){u.get(this)?.unmounted?.()}adoptedCallback(){u.get(this)?.adopted?.()}attributeChangedCallback(e,t,o){this[r[e]]=o??void 0}}return o};class t extends e({style:`
:host{
  display: flex;
  height: 64px;
  background: var(--s-color-surface-container, #e2e0f9);
  align-items: center;
  position: relative;
  padding: 0 8px;
}
::slotted([slot=navigation]){
  margin-left: 4px;
  flex-shrink: 0;
}
::slotted([slot=logo]){
  margin-left: 12px;
  height: 32px;
  fill: var(--s-color-on-surface-variant, #46464f);
  flex-shrink: 0;
}
::slotted([slot=headline]){
  font-size: 1.375rem;
  font-weight: 400;
  overflow: hidden;
  text-transform: capitalize;
  text-overflow: ellipsis;
  white-space: nowrap;
  margin: 0 12px;
  color: var(--s-color-on-surface, #1c1b1f);
}
::slotted([slot=action]){
  margin: 0 4px;
  flex-shrink: 0;
}
.view{
  flex-grow: 1;
  min-width: 0;
  height: 100%;
  display: flex;
  align-items: center;
}
::slotted(s-search){
  background: var(--s-color-surface, #fffbff);
}
::slotted(s-appbar){
  height: 100%;
  width: 100%;
  max-width: 1280px;
  background: none;
  margin: 0 auto;
  padding: 0;
}
@media(max-width: 768px){
  :host{
    height: 56px;
  }
}
`,template:`
<slot name="start"></slot>
<slot name="navigation"></slot>
<slot name="logo"></slot>
<slot name="headline"></slot>
<div class="view" part="view">
  <slot></slot>
</div>
<slot name="action"></slot>
<slot name="end"></slot>
`,props:{}}){}t.define("s-appbar");class o extends e({style:`
:host{
  display: inline-flex;
  justify-content: center;
  align-items: center;
  min-width: 18px;
  height: 18px;
  background: var(--s-color-error, #ba1a1a);
  color: var(--s-color-on-error, #ffffff);
  border-radius: 18px;
  padding: 0 3px;
  font-size: .625rem;
  box-sizing: border-box;
  vertical-align: middle;
}
:host(:empty){
  width: 8px;
  height: 8px;
  min-width: auto;
  padding: 0;
}
`,template:"<slot></slot>",props:{}}){}o.define("s-badge");const r=matchMedia("(pointer:coarse)"),l=(r.addEventListener("change",({matches:e})=>l.touched=e),{touched:r.matches,addEventListener:e=>r.addEventListener("change",()=>e(l.touched))});class s extends e({style:`
:host{
  display: inline-block;
  vertical-align: middle;
  position: relative;
  cursor: pointer;
}
:host([attached=true]){
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  border-radius: inherit;
}
.container{
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  pointer-events: none;
  overflow: hidden;
  border-radius: inherit;
}
.container::before{
  content: '';
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
  border-radius: inherit;
  background: var(--ripple-color, currentColor);
  opacity: 0;
  transition: opacity .1s ease-out;
}
.container.hover::before{
  opacity: .12;
}
.ripple {
  background: color-mix(in srgb, var(--ripple-color, currentColor) 24%, transparent);
  border-radius: 50%;
  width: 100%;
  height: 100%;
  position: absolute;
  transform: translate(-50%, -50%) scale(0);
  filter: blur(8px);
  left: 0;
  top: 0;
}
`,template:`
<slot></slot>
<div class="container" part="container">
  <div class="ripple"></div>
</div>
`,props:{centered:!1,attached:!1},syncProps:["attached"],setup(e){const t=e.querySelector(".container"),d=e.querySelector(".ripple"),o=()=>!l.touched&&t.classList.add("hover"),r=()=>!l.touched&&t.classList.remove("hover"),c={parentNode:null},s=e=>{var{offsetWidth:t,offsetHeight:o}=this;let r=Math.sqrt(t*t+o*o);var s,i,a={x:"50%",y:"50%"};this.centered||({left:s,top:i}=this.getBoundingClientRect(),s=e.clientX-s,e=e.clientY-i,i=o/2,o=t/2,t=2*(Math.abs(i-e)+i),i=2*(Math.abs(o-s)+o),r=Math.sqrt(t*t+i*i),a.x=s+"px",a.y=e+"px");const n=c.parentNode??this;n.setAttribute("rippled","");o={transform:"translate(-50%, -50%) scale(1)",opacity:1,width:r+"px",height:r+"px",left:""+a.x,top:""+a.y};const l=d.animate([{...o,transform:"translate(-50%, -50%) scale(0)"},o],{duration:800,fill:"forwards",easing:"cubic-bezier(.2, .9, .1, .9)"});return()=>{n.removeAttribute("rippled");var e=Number(l.currentTime);d.animate([{opacity:1},{opacity:0}],{duration:600<e?200:800-e,fill:"forwards"})}},i=async t=>{if(0===t.button){const o={};if("mouse"===t.pointerType&&document.addEventListener("pointerup",s(t),{once:!0}),"touch"===t.pointerType){let e;o.timer=setTimeout(()=>{e=s(t),document.removeEventListener("touchmove",r),o.upper&&e()},40),document.addEventListener("touchend",()=>{if(!e)return o.upper=!0;e()},{once:!0});const r=()=>clearTimeout(o.timer);document.addEventListener("touchmove",r,{once:!0})}}},a=e=>{e.addEventListener("mouseover",o),e.addEventListener("mouseleave",r),e.addEventListener("wheel",r,{passive:!0}),e.addEventListener("pointerdown",i)},n=()=>{c.parentNode&&(c.parentNode.removeEventListener("mouseover",o),c.parentNode.removeEventListener("mouseleave",r),c.parentNode.removeEventListener("wheel",r),c.parentNode.removeEventListener("pointerdown",i),c.parentNode=null)};return a(this),{mounted:()=>{this.attached&&this.parentNode&&(c.parentNode=this.parentNode instanceof ShadowRoot?this.parentNode.host:this.parentNode,a(c.parentNode))},unmounted:()=>this.attached&&n(),props:{attached:e=>{if(this.isConnected)return e?(e=this.parentNode instanceof ShadowRoot?this.parentNode.host:this.parentNode,void a(e)):n()}}}}}){}s.define("s-ripple");class i extends e({style:`
:host{
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  display: inline-flex;
  vertical-align: middle;
  border-radius: 20px;
  padding: 0 24px;
  height: 40px;
  text-transform: capitalize;
  position: relative;
  cursor: pointer;
  font-size: .875rem;
  font-weight: 500;
  line-height: 1;
  white-space: nowrap;
  background: var(--s-color-primary, #5256a9);
  color: var(--s-color-on-primary, #ffffff);
  transition: box-shadow .1s ease-out;
  overflow: hidden;
}
:host([disabled=true]){
  pointer-events: none !important;
  background: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 12%, transparent) !important;
  color: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 38%, transparent) !important;
}
:host([type=elevated]){
  background: var(--s-color-surface-container-low, #f6f2f7);
  color: var(--s-color-primary, #5256a9);
  box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
}
:host([type=elevated][disabled=true]){
  box-shadow: none !important;
}
:host([type=filled-tonal]){
  background: var(--s-color-secondary-container, #e2e0f9);
  color: var(--s-color-on-secondary-container, #191a2c);
}
:host([type=outlined]){
  border: solid 1px var(--s-color-outline, #777680);
  background: none;
  color: var(--s-color-primary, #5256a9);
}
:host([type=outlined][disabled=true]){
  background: none !important;
  border-color: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 12%, transparent) !important;
}
:host([type=text]){
  background: none;
  color: var(--s-color-primary, #5256a9);
  padding: 0 16px;
}
:host([type=text][disabled=true]){
  background: none !important;
}
.ripple{
  border-radius: 0;
}
::slotted(*){
  fill: currentColor;
  color: currentColor;
  width: 18px;
  height: 18px;
}
::slotted(s-icon[slot=start]),
::slotted(svg[slot=start]){
  margin: 0 4px 0 -8px;
}
::slotted(s-icon[slot=end]),
::slotted(svg[slot=end]){
  margin: 0 -8px 0 4px;
}
::slotted(s-circular-progress[slot=start]){
  margin: 0 8px 0 -8px;
}
::slotted(s-circular-progress[slot=end]){
  margin: 0 -8px 0 8px;
}
:host([type=text]) ::slotted(s-icon[slot=start]),
:host([type=text]) ::slotted(svg[slot=start]){
  margin: 0 4px 0 -4px;
}
:host([type=text]) ::slotted(s-icon[slot=end]),
:host([type=text]) ::slotted(svg[slot=end]){
  margin: 0 -4px 0 4px;
}
:host([rippled]){
  box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
}
:host([type=elevated][rippled]){
  box-shadow: var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));
}
:host([type=filled-tonal][rippled]),
:host([type=outlined][rippled]),
:host([type=text][rippled]){
  box-shadow: none;
}
@media (pointer: fine){
  :host([type=elevated]:hover){
    box-shadow: var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));
  }
  :host(:hover){
    box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
  }
  :host([type=filled-tonal]:hover),
  :host([type=outlined]:hover),
  :host([type=text]:hover){
    box-shadow: none;
  }
}
`,template:`
<slot name="start"></slot>
<slot></slot>
<slot name="end"></slot>
<s-ripple class="ripple" attached="true" part="ripple"></s-ripple>
`,props:{disabled:!1,type:"filled"},syncProps:!0}){}i.define("s-button");class a extends e({style:`
:host{
  display: inline-block;
  vertical-align: middle;
  background: var(--s-color-surface-container-low, #f6f2f7);
  box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
  border-radius: 12px;
  position: relative;
  font-size: .875rem;
  box-sizing: border-box;
  max-width: 280px;
  color: var(--s-color-on-surface, #1c1b1f);
  overflow: hidden;
}
:host([type=filled]){
  background: var(--s-color-surface-container-highest, #e5e1e6);
  box-shadow: none;
}
:host([type=outlined]){
  background: var(--s-color-surface, #fffbff);
  border: solid 1px var(--s-color-outline-variant, #c7c5d0);
  box-shadow: none;
}
:host([clickable=true]){
  cursor: pointer;
  transition: box-shadow .1s ease-out;
}
:host([clickable=true]) .ripple{
  display: block;
}
.action{
  display: flex;
  justify-content: flex-end;
}
.ripple{
  display: none;
  border-radius: 0;
}
::slotted([slot=image]){
  display: block;
  height: 128px;
  background: var(--s-color-surface-container-high, #eae7ec);
}
::slotted([slot=headline]){
  font-size: 1.5rem;
  line-height: 1.6;
  margin: 16px 16px 0 16px;
}
::slotted([slot=subhead]){
  font-size: 1rem;
  line-height: 1.6;
  margin: 4px 16px;
}
::slotted([slot=text]){
  line-height: 1.6;
  margin: 8px 16px;
  color: var(--s-color-on-surface-variant, #46464f);
}
::slotted(s-button[slot=action]){
  margin: 16px 4px;
}
::slotted(s-button[slot=action]:last-of-type){
  margin-right: 16px;
}
@media (pointer: fine){
  :host([clickable=true][type=filled]:hover),
  :host([clickable=true][type=outlined]:hover){
    box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
  }
  :host([clickable=true]:hover){
    box-shadow: var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));
  }
}
`,template:`
<slot name="start"></slot>
<slot name="image"></slot>
<slot name="headline"></slot>
<slot name="subhead"></slot>
<slot name="text"></slot>
<slot></slot>
<div class="action" part="action">
  <slot name="action"></slot>
</div>
<slot name="end"></slot>
<s-ripple class="ripple" attached="true" part="ripple"></s-ripple>
`,props:{type:"elevated",clickable:!1},syncProps:!0,setup(e){e.querySelector("slot[name=action]").addEventListener("pointerdown",e=>e.stopPropagation())}}){}a.define("s-card");class N extends e({style:`
:host{
  display: block;
  height: 280px;
  background: var(--s-color-surface-container-low, #f6f2f7);
  border-radius: 8px;
  position: relative;
  color: var(--s-color-primary, #5256a9);
  overflow: hidden;
  max-width: 480px;
}
.container{
  display: flex;
  justify-content: flex-start;
  height: 100%;
  transition: transform .2s ease-out;
}
.dot{
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
}
.dot>.item{
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--s-color-secondary-container, #e2e0f9);
  flex-shrink: 0;
  margin: 16px 4px;
  cursor: pointer;
  pointer-events: auto;
}
.dot>.checked{
  background: currentColor;
  opacity: 1;
}
::slotted(*){
  display: block;
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}
`,template:`
<div class="container" part="container">
  <slot></slot>
</div>
<div class="dot" part="dot-container"></div>
`,props:{duration:4e3},setup(e){const t=e.querySelector(".container"),i=e.querySelector(".dot"),a=e.querySelector("slot");let n=0,l=0,o=0;const r=()=>{t.style.transform=`translateX(-${100*n}%)`,i.querySelector(".checked")?.classList.remove("checked"),i.children[n]?.classList.add("checked")},d=()=>{clearInterval(o),r(),0!==l&&(o=setInterval(()=>{var e=n+1;n=e===l?0:e,r()},this.duration))};return a.addEventListener("slotchange",()=>{i.innerHTML="";var e=a.assignedElements(),t=document.createDocumentFragment();for(const r in e){var o=document.createElement("div");const s=Number(r);o.className=0===s?"item checked":"item",o.setAttribute("part","dot"),o.addEventListener("click",()=>{n=s,d()}),t.appendChild(o)}l=e.length,i.appendChild(t),n=0,d()}),{mounted:d,unmounted:()=>clearInterval(o),props:{duration:d}}}}){}N.define("s-carousel");class _ extends e({style:`
:host{
  display: inline-flex;
  align-items: center;
  vertical-align: middle;
  cursor: pointer;
  white-space: nowrap;
  height: 40px;
  --checkbox-color: var(--s-color-primary, #5256a9);
}
:host([disabled=true]){
  pointer-events: none;
}
.container{
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  height: 100%;
  aspect-ratio: 1;
  -webkit-aspect-ratio: 1;
  border-radius: 50%;
  color: var(--checkbox-color);
}
:host([disabled=true]) .container{
  color: var(--s-color-on-surface, #1c1b1f) !important;
  opacity: .38 !important;
}
.icon{
  width: 60%;
  height: 60%;
  fill: currentColor;
}
.icon,
.ripple{
  color: var(--s-color-on-surface-variant, #46464f);
}
:host([checked=true]) .icon,
:host([checked=true]) .ripple{
  color: currentColor;
}
.checked,
.indeterminate{
  position: absolute;
  transform: scale(.5);
  opacity: 0;
  transition: transform .1s ease-out, opacity .1s ease-out;
}
:host([checked=true]:not([indeterminate=true])) .checked,
:host([indeterminate=true]) .indeterminate{
  opacity: 1;
  transform: scale(1);
}
`,template:`
<div class="container" part="container">
  <svg class="icon uncheck" viewBox="0 -960 960 960">
    <path d="M200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Zm0-80h560v-560H200v560Z"></path>
  </svg>
  <svg class="icon checked" viewBox="0 -960 960 960">
    <path d="m424-312 282-282-56-56-226 226-114-114-56 56 170 170ZM200-120q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Z"></path>
  </svg>
  <svg class="icon indeterminate" viewBox="0 -960 960 960">
    <path d="M280-440h400v-80H280v80Zm-80 320q-33 0-56.5-23.5T120-200v-560q0-33 23.5-56.5T200-840h560q33 0 56.5 23.5T840-760v560q0 33-23.5 56.5T760-120H200Z"></path>
  </svg>
  <s-ripple class="ripple" attached="true" part="ripple"></s-ripple>
</div>
<slot></slot>
`,props:{disabled:!1,checked:!1,indeterminate:!1},syncProps:!0,setup(){this.addEventListener("click",()=>{this.indeterminate&&(this.indeterminate=!1),this.checked=!this.checked,this.dispatchEvent(new Event("change"))})}}){}_.define("s-checkbox");class A extends e({style:`
:host{
  display: inline-flex;
  align-items: center;
  vertical-align: middle;
  padding: 0 16px;
  height: 32px;
  border: solid 1px var(--s-color-color-outline, #777680);
  border-radius: 8px;
  box-sizing: border-box;
  white-space: nowrap;
  font-size: .875rem;
  position: relative;
  cursor: pointer;
  overflow: hidden;
}
:host([type=elevated]){
  border: none;
  box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
}
:host([type=filled-tonal]){
  background: var(--s-color-secondary-container, #e2e0f9);
  color: var(--s-color-on-surface-variant, #46464f);
  border: none;
}
.ripple{
  display: none;
  border-radius: 0;
}
:host([clickable=true]) .ripple{
  display: block;
}
::slotted(*){
  width: 18px;
  height: 18px;
}
::slotted([slot=start]){
  margin: 0 8px 0 -8px;
}
::slotted([slot=end]){
  margin: 0 -8px 0 8px;
}
::slotted(s-icon-button[slot=action]){
  margin: 0 -12px 0 8px;
  width: 24px;
  height: 24px;
  padding: 3px;
  flex-shrink: 0;
}
`,template:`
<slot name="start"></slot>
<slot></slot>
<slot name="end"></slot>
<slot name="action"></slot>
<s-ripple class="ripple" attached="true" part="ripple"></s-ripple>
`,props:{type:"outlined",clickable:!1},syncProps:!0,setup(e){e.querySelector("slot[name=action]").addEventListener("pointerdown",e=>e.stopPropagation())}}){}A.define("s-chip");const n=44*Math.PI;var d=`
<div class="container known">
  <svg viewBox="0 0 48 48" style="transform: rotate(-90deg);--dasharray: ${n}px;">
    <circle class="track block" cx="24" cy="24" r="22" style="stroke-width: 4px" />
    <circle class="indicator block" cx="24" cy="24" r="22" style="stroke-dashoffset: ${n}px;stroke-width: 4px" />
  </svg>
</div>
<div class="container unknown">
  <svg viewBox="0 0 48 48" style="animation: stroke-rotate 5.2s ease-in-out infinite;--dasharray: ${n}px;">
    <circle transform="rotate(-90, 24, 24)" cx="24" cy="24" r=" 22" style="animation: stroke 1.3s ease-in-out infinite;stroke-width: 4px"></circle>
  </svg>
</div>
`;class B extends e({style:`
:host{
  display: inline-block;
  vertical-align: middle;
  position: relative;
  width: 48px;
  aspect-ratio: 1;
  -webkit-aspect-ratio: 1;
  color: var(--s-color-primary, #5256a9);
}
:host([animated=true]) .known .block{
  transition: stroke-dashoffset .2s, transform .2s;
  transition-timing-function: ease-out;
}
:host([indeterminate=true]) .known,
.unknown{
  display: none;
}
:host([indeterminate=true]) .unknown,
.known{
  display: block;
}
.container{
  width: 100%;
  height: 100%;
  border-radius: inherit;
  position: relative;
}
svg{
  height: inherit;
  width: inherit;
  stroke: currentColor;
}
circle{
  stroke-linecap: round;
  fill: none;
  stroke-dasharray: var(--dasharray);
}
.track{
  stroke: var(--s-color-secondary-container, #e2e0f9);
}
@keyframes stroke{
  0% { stroke-dashoffset: var(--dasharray) }
  50% { stroke-dashoffset: calc(var(--dasharray) / 4) }
  100% { stroke-dashoffset: var(--dasharray) }
}
@keyframes stroke-rotate{
  0% { transform: rotate(0deg) }
  12.5% { transform: rotate(0deg) }
  25% {transform: rotate(270deg)}
  37.5% {transform: rotate(270deg)}
  50% {transform: rotate(540deg)}
  62.5% {transform: rotate(540deg)}
  75% {transform: rotate(810deg)}
  87.5% {transform: rotate(810deg)}
  100% { transform: rotate(1080deg) }
  100% { transform: rotate(1080deg) }
}
@keyframes rotate{
  0% { transform: rotate(0deg) }
  100% { transform: rotate(360deg) }
}
.unknown{
  animation: rotate 1568ms linear infinite;
}
`,template:d,props:{indeterminate:!1,animated:!1,max:100,value:0},syncProps:["indeterminate","animated"],setup(e){const r=e.querySelector(".known .track"),s=e.querySelector(".known .indicator");e=()=>{var e=Math.min(this.value,this.max)/this.max*100,t=n-n*(e/100),o=e/100*360;r.style.strokeDashoffset=`${0==e?0:Math.min(16+n-t,n)}px`,r.setAttribute("transform",`rotate(${20+o}, 24, 24)`),s.style.strokeDashoffset=t+"px"};return{props:{max:e,value:e}}}}){}B.define("s-circular-progress");const c=document.createElement("div"),p=(c.setAttribute("style","position: fixed;right: 0;bottom: 0;width: 100%;height: 100%;pointer-events: none"),e=>{e.appendChild(c);var t=c.getBoundingClientRect();return e.removeChild(c),{left:t.left,top:t.top,width:t.width,height:t.height}});class I extends e({style:`
:host{
  display: block;
  overflow: auto;
}
@media (pointer: fine){
  :host::-webkit-scrollbar{
    width: 6px;
    height: 6px;
    background: transparent;
  }
  :host::-webkit-scrollbar-thumb{
    background: var(--s-color-outline-variant, #c7c5d0);
    border-radius: 3px;
  }
  @supports not selector(::-webkit-scrollbar){
    :host{
      scrollbar-color: var(--s-color-outline-variant, #c7c5d0) transparent;
    }
  }
}
`,template:"<slot></slot>",props:{}}){}I.define("s-scroll-view");class h extends e({style:`
:host{
  display: inline-block;
  vertical-align: middle;
}
.wrapper{
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: var(--z-index, 2);
  pointer-events: none;
  display: flex;
  justify-content: center;
  align-items: center;
}
.scrim{
  background: color-mix(in srgb, var(--s-color-scrim, #000000) 80%, transparent);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  pointer-events: none;
  opacity: 0;
  transition: opacity .2s ease-out;
}
.wrapper.show .scrim{
  opacity: 1;
  pointer-events: auto;
}
.container{
  max-width: calc(100% - 48px);
  max-height: calc(100% - 48px);
  width: 520px;
  height: calc-size(auto);
  background: var(--s-color-surface-container-low, #f6f2f7);
  position: relative;
  border-radius: 28px;
  box-shadow: var(--s-elevation-level5, 0 10px 14px -6px rgba(0, 0, 0, .2), 0 22px 35px 3px rgba(0, 0, 0, .14), 0 8px 42px 7px rgba(0, 0, 0, .12));
  display: flex;
  flex-direction: column;
  overflow: hidden;
  top: 100%;
  transition: width .2s, height .2s, border-radius .2s;
  transition-timing-function: ease-out;
  --z-index: var(--z-index, 2);
}
.wrapper.show .container{
  pointer-events: auto;
  top: 0;
}
:host([size=full]) .container{
  width: 100%;
  height: 100%;
  border-radius: 0;
  max-width: none;
  max-height: none;
}
::slotted([slot=headline]){
  padding: 24px 24px 0 24px;
  font-size: 1.5rem;
  line-height: 1.6;
  font-weight: 600;
  color: var(--s-color-on-surface, #1c1b1f);
  flex-shrink: 0;
}
.text{
  user-select: text;
  -webkit-user-select: text;
  flex-grow: 1;
}
::slotted([slot=text]){
  margin: 16px 24px;
  line-height: 1.6;
}
.action{
  display: flex;
  justify-content: flex-end;
  padding: 0 14px;
  flex-shrink: 0;
}
::slotted([slot=action]){
  min-width: 72px;
  margin: 16px 2px;
  display: inline-flex;
  align-items: center;
  padding: 0 24px;
  color: var(--s-color-primary, #5256a9);
  box-sizing: border-box;
  height: 40px;
  font-size: .875rem;
  cursor: pointer;
}
:host([size=full]) ::slotted([slot=text]),
:host([size=full]) ::slotted(:not([slot])){
  max-width: none;
}
`,template:`
<slot name="trigger"></slot>
<div class="wrapper" part="wrapper">
  <div class="scrim" part="scrim"></div>
  <div class="container" part="container">
    <slot name="headline"></slot>
    <s-scroll-view class="text" part="view">
      <slot></slot>
      <slot name="text"></slot>
    </s-scroll-view>
    <div class="action" part="action">
      <slot name="action"></slot>
    </div>
  </div>
</div>
`,props:{size:"basic"},syncProps:["size"],setup(t){var e=t.querySelector("slot[name=trigger]");const o=t.querySelector(".wrapper"),r=t.querySelector(".container"),s=t.querySelector(".scrim");var i=t.querySelector("slot[name=action]");const a={duration:200,easing:"ease-out",fill:"forwards"},n=e=>{this.dispatchEvent(new CustomEvent("show",{cancelable:!0,detail:{source:e}}))&&(0===(e=p(t)).top&&0===e.left||(e=`width: ${innerWidth}px;height: ${innerHeight}px;top: ${0-e.top}px;left: ${0-e.left}px`,s.setAttribute("style",e),o.setAttribute("style",e)),o.classList.add("show"),r.animate([{transform:"scale(.9)",filter:"opacity(0)",top:0},{transform:"scale(1)",filter:"opacity(1)",top:0}],a).addEventListener("finish",()=>this.dispatchEvent(new Event("showed"))))},l=e=>{this.dispatchEvent(new CustomEvent("dismiss",{cancelable:!0,detail:{source:e}}))&&(o.classList.remove("show"),r.animate([{transform:"scale(1)",filter:"opacity(1)",top:0},{transform:"scale(.9)",filter:"opacity(0)",top:0}],a).addEventListener("finish",()=>this.dispatchEvent(new Event("dismissed"))))};return e.addEventListener("click",()=>n("TRIGGER")),s.addEventListener("click",()=>l("SCRIM")),i.addEventListener("click",()=>l("ACTION")),{expose:{show:()=>n(),dismiss:()=>l()}}}}){static show=e=>{let t=document.body;const o=new h;var r=document.body.firstElementChild;if(r&&"S-PAGE"===r.tagName&&(t=r),"string"==typeof e){var r=document.createElement("div");r.slot="text",r.textContent=e,o.appendChild(r)}else{e.root&&(t=e.root),e.headline&&((r=document.createElement("div")).slot="headline",r.textContent=e.headline,o.appendChild(r)),e.text&&((r=document.createElement("div")).slot="text",r.textContent=e.text,o.appendChild(r)),e.view&&("function"==typeof e.view?e.view(o):o.appendChild(e.view));for(const i of e.actions??[]){var s=document.createElement("s-button");s.slot="action",s.type="text",s.textContent=i.text,i.click&&s.addEventListener("click",i.click),o.appendChild(s)}}return t.appendChild(o),o.addEventListener("dismissed",()=>t.removeChild(o)),requestAnimationFrame(o.show),o}}h.define("s-dialog");class W extends e({style:`
:host{
  display: block;
  height: 1px;
  background: var(--s-color-outline-variant, #c7c5d0);
  margin: 0 16px;
}
`,template:"<slot></slot>",props:{}}){}W.define("s-divider");d=matchMedia("(max-width: 1200px)");const f={folded:d.matches};d.addEventListener("change",({matches:e})=>f.folded=e);class O extends e({style:`
:host{
  display: block;
  height: 100%;
  background: var(--s-color-background, #fffbff);
}
.container{
  display: flex;
  height: 100%;
  position: relative;
  overflow: hidden;
}
.scrim{
  background: color-mix(in srgb, var(--s-color-scrim, #000000) 80%, transparent);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
  opacity: 0;
  transition: opacity .3s ease-out;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  pointer-events: none;
}
.start,
.end{
  flex-shrink: 0;
  min-width: 0;
  display: block;
}
::slotted(*){
  flex-grow: 1;
  min-width: 0;
}
::slotted([slot=start]),
::slotted([slot=end]){
  width: 280px;
  background: var(--s-color-surface-container-low, #f6f2f7);
  border-color: var(--s-color-surface-container-high, #eae7ec);
  border-width: 1px;
  height: 100%;
  box-sizing: border-box;
  position: relative;
  display: block;
}
::slotted([slot=start]){
  border-right-style: solid;
}
::slotted([slot=end]){
  border-left-style: solid;
}
@media (min-width: 1200px){
  .start,
  .end{
    width: 0;
    overflow: hidden;
  }
  .show-start .start,
  .show-end .end{
    width: auto;
  }
}
@media (max-width: 1200px){
  .start,
  .end{
    position: absolute;
    left: 0;
    top: 100%;
    max-width: 80%;
    height: 100%;
    pointer-events: none;
  }
  .end{
    left: auto;
    right: 0;
  }
  .show-start-folded .scrim,
  .show-end-folded .scrim{
    opacity: 1;
    pointer-events: auto;
  }
  .show-start-folded .start,
  .show-end-folded .end{
    top: 0;
    pointer-events: auto;
  }
  ::slotted([slot=start]),
  ::slotted([slot=end]){
    max-width: 100%;
  }
  .show-start-folded ::slotted([slot=start]),
  .show-end-folded ::slotted([slot=end]){
    box-shadow: var(--s-elevation-level3, 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12));
  }
}
`,template:`
<div class="container show-start show-end" part="container">
  <slot></slot>
  <div class="scrim" part="scrim"></div>
  <slot name="start" class="start" part="start" style="order: -1"></slot>
  <slot name="end"  class="end" part="end"></slot>
</div>
`,props:{},setup(e){const s=e.querySelector(".container");var t=e.querySelector(".scrim");const i=e.querySelector(".start"),a=e.querySelector(".end"),n={duration:300,easing:"ease-out"},l=(e,t)=>t??f.folded?`show-${e}-folded`:"show-"+e,r=(e="start",t)=>{var o=l(e,t);s.classList.contains(o)||(s.classList.add(o),o=t??f.folded,t={start:i,end:a}[e]??i,e=o?[{transform:`translateX(${{start:-t.offsetWidth,end:t.offsetWidth}[e]}px)`},{transform:"translateX(0)"}]:[{width:0},{width:t.offsetWidth+"px"}],o===f.folded&&t.animate(e,{duration:n.duration,easing:n.easing}))},d=(e="start",t)=>{var o,r=l(e,t);s.classList.contains(r)&&(o={start:i,end:a}[e]??i,e=(t=t??f.folded)?[{top:0,transform:"translateX(0)"},{top:0,transform:`translateX(${{start:-o.offsetWidth,end:o.offsetWidth}[e]}px)`}]:[{width:o.offsetWidth+"px"},{width:0}],t===f.folded&&o.animate(e,{duration:n.duration,easing:n.easing}),s.classList.remove(r))};return t.addEventListener("click",()=>{d(),d("end")}),{expose:{show:r,dismiss:d,toggle:(e="start",t)=>{var o=l(e,t);(s.classList.contains(o)?d:r)(e,t)}}}}}){}O.define("s-drawer");class R extends e({style:`
:host{
  display: inline-block;
  vertical-align: middle;
  text-align: start;
}
.wrapper{
  pointer-events: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: var(--z-index, 1);
}
.scrim{
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.show .scrim{
  pointer-events: auto;
}
.container{
  position: absolute;
  pointer-events: none;
  white-space: nowrap;
  opacity: 0;
  --z-index: var(--z-index, 1);
}
.show .container{
  pointer-events: auto;
  opacity: 1;
}
::slotted(*:not([slot])){
  background: var(--s-color-surface-container-low, #f6f2f7);
  border-radius: 4px;
  box-shadow: var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));
  max-height: 100vh;
}
`,template:`
<div id="trigger" part="trigger">
  <slot name="trigger"></slot>
</div>
<div class="wrapper" part="wrapper">
  <div class="scrim" part="scrim"></div>
  <div class="container" part="container">
    <slot></slot>
  </div>
</div>
`,props:{showAlign:"center"},setup(e){const i=e.querySelector("#trigger"),a=e.querySelector(".wrapper");var t=e.querySelector(".scrim");const n=e.querySelector(".container"),l={duration:100,easing:"ease-out"},r=(t,o,r)=>{if(this.isConnected&&!a.classList.contains("show")){var s=p(e),s=(0===s.top&&0===s.left||a.setAttribute("style",`width: ${innerWidth}px;height: ${innerHeight}px;top: ${0-s.top}px;left: ${0-s.left}px`),{top:0,left:0,origin:[]});if("number"==typeof t&&o&&(s.top=o,s.left=t,s.origin=r?r.split(" "):["left","top"],t+n.offsetWidth>innerWidth&&(s.left=t-n.offsetWidth,s.origin[0]="right"),o+n.offsetHeight>innerHeight)&&(s.top=o-n.offsetHeight,s.origin[1]="bottom"),void 0===t||t instanceof HTMLElement){r=(t||i).getBoundingClientRect(),o=n.offsetWidth,t=n.offsetHeight;s.origin=["center","top"],s.top=r.y+r.height,s.left=r.x-(o-r.width)/2;let e={left:{value:r.x,origin:"left"},right:{value:r.x+r.width-o,origin:"right"},top:{value:r.top-t,origin:"bottom"}};"left"===this.showAlign&&(s.origin[0]="right",s.left=r.x-o,s.top=r.y,e={left:{value:r.x+r.width,origin:"left"},right:{value:s.left,origin:s.origin[0]},top:{value:r.y+r.height-t,origin:"bottom"}}),"right"===this.showAlign&&(s.origin[0]="left",s.left=r.x+r.width,s.top=r.y,e={left:{value:s.left,origin:s.origin[0]},right:{value:r.x-o,origin:"right"},top:{value:r.y+r.height-t,origin:"bottom"}}),s.left<0&&(s.origin[0]=e.left.origin,s.left=e.left.value),s.left+o>innerWidth&&(s.origin[0]=e.right.origin,s.left=Math.max(e.right.value,0)),s.top+t>innerHeight&&(s.origin[1]=e.top.origin,s.top=Math.max(e.top.value,0))}n.style.transformOrigin=s.origin.join(" "),n.style.top=s.top+"px",n.style.left=s.left+"px",a.classList.add("show"),n.animate([{transform:"scale(.9)",opacity:0},{transform:"scale(1)",opacity:1}],l),this.dispatchEvent(new Event("show"))}},s=()=>{this.isConnected&&a.classList.contains("show")&&(a.classList.remove("show"),n.animate([{transform:"scale(1)",opacity:1},{transform:"scale(.9)",opacity:0}],l),this.dispatchEvent(new Event("dismiss")))};return i.addEventListener("click",()=>r()),t.addEventListener("pointerdown",s),{expose:{show:r,dismiss:s,toggle:(e,t,o)=>{this.isConnected&&(a.classList.contains("show")?s():r(e,t,o))}},mounted:()=>addEventListener("resize",s),unmounted:()=>removeEventListener("resize",s)}}}){}R.define("s-popup");class F extends e({style:`
:host{
  display: inline-flex;
  justify-content: center;
  align-items: center;
  vertical-align: middle;
  position: relative;
  cursor: pointer;
  box-sizing: border-box;
  aspect-ratio: 1;
  -webkit-aspect-ratio: 1;
  width: 56px;
  border-radius: 16px;
  background: var(--s-color-primary-container, #e1e0ff);
  color: var(--s-color-on-primary-container, #090764);
  transition: box-shadow .1s ease-out;
  font-size: .875rem;
  font-weight: 500;
  white-space: nowrap;
  line-height: 1;
  text-transform: capitalize;
  box-shadow: var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));
}
:host([size=small]){
  width: 48px;
  border-radius: 12px;
}
:host([extended=true]){
  padding: 0 16px;
  aspect-ratio: auto;
  -webkit-aspect-ratio: auto;
  width: auto;
  height: 48px;
}
::slotted(s-icon){
  color: currentColor;
}
::slotted(svg){
  width: 24px;
  height: 24px;
  fill: currentColor;
}
::slotted(s-icon[slot=start]),
::slotted(svg[slot=start]){
  margin: 0 8px 0 0;
}
::slotted(s-icon[slot=end]),
::slotted(svg[slot=end]){
  margin: 0 0 0 8px;
}
:host([rippled]){
  box-shadow: var(--s-elevation-level3, 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12));
}
@media (pointer: fine){
  :host(:hover){
    box-shadow: var(--s-elevation-level3, 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12));
  }
}
`,template:`
<slot name="start"></slot>
<slot></slot>
<slot name="end"></slot>
<s-ripple attached="true" part="ripple"></s-ripple>
`,props:{size:"medium",extended:!1},syncProps:!0}){}F.define("s-fab");class X extends e({style:`
:host{
  display: inline-flex;
  vertical-align: middle;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  border-radius: 50%;
  width: 40px;
  aspect-ratio: 1;
  -webkit-aspect-ratio: 1;
  color: var(--s-color-on-surface-variant, #46464f);
  position: relative;
  box-sizing: border-box;
}
:host([disabled=true]){
  pointer-events: none !important;
  color: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 38%, transparent) !important;
}
:host([type=filled]){
  background: var(--s-color-primary, #5256a9);
  color: var(--s-color-on-primary, #ffffff);
}
:host([type=filled][disabled=true]){
  background: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 12%, transparent) !important;
}
:host([type=filled]) ::slotted(s-badge[slot=badge]){
  outline: solid 2px currentColor;
}
:host([type=filled-tonal]){
  background: var(--s-color-secondary-container, #e2e0f9);
  color: var(--s-color-on-secondary-container, #191a2c);
}
:host([type=filled-tonal][disabled=true]){
  background: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 12%, transparent) !important;
}
:host([type=outlined]){
  border: solid 1px var(--s-color-outline, #777680)
}
:host([type=outlined][disabled=true]){
  border-color: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f)) !important;
}
.ripple{
  border-radius: inherit;
}
.badge{
  position: absolute;
  top: -4px;
  right: -4px;
  width: 50%;
  height: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}
::slotted(:not([slot=badge])){
  color: inherit;
}
::slotted(svg){
  width: 24px;
  height: 24px;
  fill: currentColor;
}
`,template:`
<slot name="start"></slot>
<slot></slot>
<slot name="end"></slot>
<s-ripple class="ripple" attached="true" part="ripple"></s-ripple>
<div class="badge">
  <slot name="badge"></slot>
</div>
`,props:{disabled:!1,type:"standard"},syncProps:!0}){}X.define("s-icon-button");const u={none:"",home:"M240-200h120v-240h240v240h120v-360L480-740 240-560v360Zm-80 80v-480l320-240 320 240v480H520v-240h-80v240H160Zm320-350Z",add:"M440-440H200v-80h240v-240h80v240h240v80H520v240h-80v-240Z",search:"M784-120 532-372q-30 24-69 38t-83 14q-109 0-184.5-75.5T120-580q0-109 75.5-184.5T380-840q109 0 184.5 75.5T640-580q0 44-14 83t-38 69l252 252-56 56ZM380-400q75 0 127.5-52.5T560-580q0-75-52.5-127.5T380-760q-75 0-127.5 52.5T200-580q0 75 52.5 127.5T380-400Z",menu:"M120-240v-80h720v80H120Zm0-200v-80h720v80H120Zm0-200v-80h720v80H120Z",arrow_back:"m313-440 224 224-57 56-320-320 320-320 57 56-224 224h487v80H313Z",arrow_forward:{name:"arrow_back",angle:180},arrow_upward:{name:"arrow_back",angle:90},arrow_downward:{name:"arrow_back",angle:-90},arrow_drop_up:"m280-400 200-200 200 200H280Z",arrow_drop_down:{name:"arrow_drop_up",angle:180},arrow_drop_left:{name:"arrow_drop_up",angle:-90},arrow_drop_right:{name:"arrow_drop_up",angle:90},more_vert:"M480-160q-33 0-56.5-23.5T400-240q0-33 23.5-56.5T480-320q33 0 56.5 23.5T560-240q0 33-23.5 56.5T480-160Zm0-240q-33 0-56.5-23.5T400-480q0-33 23.5-56.5T480-560q33 0 56.5 23.5T560-480q0 33-23.5 56.5T480-400Zm0-240q-33 0-56.5-23.5T400-720q0-33 23.5-56.5T480-800q33 0 56.5 23.5T560-720q0 33-23.5 56.5T480-640Z",more_horiz:{name:"more_vert",angle:90},close:"m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z",done:"M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z",chevron_up:"M480-528 296-344l-56-56 240-240 240 240-56 56-184-184Z",chevron_down:{name:"chevron_up",angle:180},chevron_left:{name:"chevron_up",angle:-90},chevron_right:{name:"chevron_up",angle:90},light_mode:"M480-360q50 0 85-35t35-85q0-50-35-85t-85-35q-50 0-85 35t-35 85q0 50 35 85t85 35Zm0 80q-83 0-141.5-58.5T280-480q0-83 58.5-141.5T480-680q83 0 141.5 58.5T680-480q0 83-58.5 141.5T480-280ZM200-440H40v-80h160v80Zm720 0H760v-80h160v80ZM440-760v-160h80v160h-80Zm0 720v-160h80v160h-80ZM256-650l-101-97 57-59 96 100-52 56Zm492 496-97-101 53-55 101 97-57 59Zm-98-550 97-101 59 57-100 96-56-52ZM154-212l101-97 55 53-97 101-59-57Zm326-268Z",dark_mode:"M480-120q-150 0-255-105T120-480q0-150 105-255t255-105q14 0 27.5 1t26.5 3q-41 29-65.5 75.5T444-660q0 90 63 153t153 63q55 0 101-24.5t75-65.5q2 13 3 26.5t1 27.5q0 150-105 255T480-120Zm0-80q88 0 158-48.5T740-375q-20 5-40 8t-40 3q-123 0-209.5-86.5T364-660q0-20 3-40t8-40q-78 32-126.5 102T200-480q0 116 82 198t198 82Zm-10-270Z",star:"m354-287 126-76 126 77-33-144 111-96-146-13-58-136-58 135-146 13 111 97-33 143ZM233-120l65-281L80-590l288-25 112-265 112 265 288 25-218 189 65 281-247-149-247 149Zm247-350Z",favorite:"m480-120-58-52q-101-91-167-157T150-447.5Q111-500 95.5-544T80-634q0-94 63-157t157-63q52 0 99 22t81 62q34-40 81-62t99-22q94 0 157 63t63 157q0 46-15.5 90T810-447.5Q771-395 705-329T538-172l-58 52Zm0-108q96-86 158-147.5t98-107q36-45.5 50-81t14-70.5q0-60-40-100t-100-40q-47 0-87 26.5T518-680h-76q-15-41-55-67.5T300-774q-60 0-100 40t-40 100q0 35 14 70.5t50 81q36 45.5 98 107T480-228Zm0-273Z"};d=`
<slot>
  <svg viewBox="0 -960 960 960">
    <path d="${u.none}"></path>
  </svg>
</slot>
`;class Y extends e({style:`
:host{
  display: inline-flex;
  vertical-align: middle;
  justify-content: center;
  align-items: center;
  width: 24px;
  aspect-ratio: 1;
  -webkit-aspect-ratio: 1;
  color: var(--s-color-on-surface-variant, #46464f);
  fill: currentColor;
  box-sizing: border-box;
}
svg{
  width: 100%;
  height: 100%;
}
::slotted(*){
  width: 100%;
  height: 100%;
}
`,template:d,props:{type:"none"},syncProps:["type"],setup(e){const o=e.querySelector("path");return{props:{type:e=>{let t=u[e];"object"==typeof t?(o.setAttribute("transform",`rotate(${t.angle} 480 -480)`),t=u[t.name]):o.removeAttribute("transform"),o.setAttribute("d",t)}}}}}){}Y.define("s-icon");class D extends e({style:`
:host{
  display: block;
  height: 4px;
  color: var(--s-color-primary, #5256a9);
  border-radius: 2px;
  overflow: hidden;
}
:host([animated=true]) .known>.block{
  transition: transform .2s ease-out;
}
:host([indeterminate=true]) .known,
.unknown{
  display: none;
}
:host([indeterminate=true]) .unknown,
.known{
  display: flex;
}
.container{
  height: 100%;
  border-radius: inherit;
  position: relative;
}
.block{
  position: absolute;
  height: 100%;
  border-radius: inherit;
  width: 100%;
  left: 0;
  top: 0;
}
.track{
  background: var(--s-color-secondary-container, #e2e0f9);
}
.indicator{
  background: currentColor;
}
.indicator-dot{
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  aspect-ratio: 1;
  -webkit-aspect-ratio: 1;
  background: currentColor;
  border-radius: inherit;
}
@keyframes unknown{
  0%{
    transform: translateX(0);
  }
  100%{
    transform: translateX(150%);
  }
}
.unknown{
  justify-content: flex-end;
  gap: 4px;
  animation: unknown 2s linear infinite;
}
.unknown .block{
  position: static;
  flex-grow: 1;
  width: 100%;
  flex-shrink: 0;
}
.unknown .indicator{
  width: 50%;
}
`,template:`
<div class="container known" part="container">
  <div class="track block" style="transform: translateX(0%)" part="track"></div>
  <div class="indicator-dot" part="indicator-dot"></div>
  <div class="indicator block" style="transform: translateX(-100%)" part="indicator"></div>
</div>
<div class="container unknown" part="container">
  <div class="track block" part="track"></div>
  <div class="indicator block" part="indicator"></div>
  <div class="track block" part="indicator"></div>
</div>
`,props:{indeterminate:!1,animated:!1,max:100,value:0},syncProps:["indeterminate","animated"],setup(e){const t=e.querySelector(".known>.track"),o=e.querySelector(".known>.indicator");e=()=>{var e=Math.min(this.value,this.max)/this.max*100;t.style.transform=`translateX(calc(${e}% + ${0==e?0:4}px))`,o.style.transform=`translateX(${e-100}%)`};return{props:{max:e,value:e}}}}){}D.define("s-linear-progress");class V extends e({style:`
:host{
  display: flex;
  flex-direction: column;
  font-size: .875rem;
  padding: 4px 0;
}
:host(:nth-of-type(n+2)){
  border-top: solid 1px var(--s-color-surface-container-high, #eae7ec);
}
::slotted([slot=label]){
  display: flex;
  align-items: center;
  height: 44px;
  margin: -4px 20px;
  font-size: .75rem;
  color: var(--s-color-on-surface-variant, #46464f);
  white-space: nowrap;
  max-width: 100%;
  overflow: hidden;
}
`,template:`
<slot name="label"></slot>
<slot></slot>
`,props:{},setup(){}}){}d={checked:!1,folded:!0};class G extends e({style:`
:host{
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  color: var(--s-color-on-surface, #1c1b1f);
  margin: 4px 8px;
}
.container{
  display: flex;
  align-items: center;
  height: 40px;
  border-radius: 24px;
  padding: 0 20px;
  flex-shrink: 0;
}
:host([checked=true]) .container{
  background: var(--s-color-secondary-container, #e2e0f9);
  color: var(--s-color-on-secondary-container, #191a2c);
}
.text{
  flex-grow: 1;
  white-space: nowrap;
  display: flex;
  align-items: center;
}
.toggle-icon{
  width: 24px;
  height: 24px;
  display: none;
  margin-right: -8px;
  margin-left: 12px;
  transform: rotate(-90deg);
  transition: transform .2s ease-out;
  fill: var(--s-color-on-surface-variant, #46464f);
}
.show-menu .toggle-icon{
  display: block;
}
:host([folded=false]) .toggle-icon{
  transform: rotate(0deg);
}
.fold{
  flex-shrink: 0;
}
.show-menu+.fold{
  margin: 0 -8px;
}
.menu{
  display: block;
  padding-top: 8px;
}
::slotted([slot=start]),
::slotted([slot=end]){
  height: 24px;
  width: 24px;
  flex-shrink: 0;
  color: var(--s-color-on-surface-variant, #46464f);
  fill: currentColor;
}
::slotted([slot=start]){
  margin-left: -4px;
  margin-right: 12px;
}
::slotted([slot=end]){
  margin-right: -8px;
  margin-left: 12px;
}
:host([checked=true]) ::slotted([slot=start]),
:host([checked=true]) ::slotted([slot=end]){
  color: currentColor;
}
::slotted([slot=menu]){
  background: var(--s-color-surface-container-low, #f6f2f7);
}
`,template:`
<s-ripple class="container" part="container">
  <slot name="start"></slot>
  <div class="text" part="text">
    <slot></slot>
  </div>
  <slot name="end">
    <svg viewBox="0 -960 960 960" class="toggle-icon">
      <path d="M480-360 280-560h400L480-360Z"></path>
    </svg>
  </slot>
</s-ripple>
<s-fold class="fold" part="fold" folded="${d.folded}">
  <slot name="menu" class="menu"></slot>
</s-fold>
`,props:d,syncProps:["checked","folded"],setup(e){const t=e.querySelector(".container"),o=e.querySelector(".fold"),r=e.querySelector("slot[name=menu]");return o.addEventListener("click",e=>e.stopPropagation()),r.addEventListener("slotchange",()=>t.classList[0<r.assignedElements().length?"add":"remove"]("show-menu")),t.addEventListener("click",()=>{t.classList.contains("show-menu")&&(this.folded=!this.folded)}),{props:{folded:e=>o.folded=e}}}}){}V.define("s-menu"),G.define("s-menu-item");class g{selects=[];select;selectValue;flag=!1;constructor(o){const e=o["context"];e.addEventListener(e.tagName.toLocaleLowerCase()+":select",t=>{t.stopPropagation(),t.target instanceof o.selectClass&&(this.flag=!0,t.target.selected=!0,this.selects.forEach(e=>e!==t.target&&(e.selected=!1)),this.select=t.target,this.flag=!1,e.dispatchEvent(new Event("change")),this.onUpdate?.(),this.onSelect?.())}),e.addEventListener(e.tagName.toLocaleLowerCase()+":update",t=>{t.stopPropagation(),!this.flag&&0!==this.selects.length&&t.target instanceof o.selectClass&&(this.flag=!0,t.target.selected?(this.select=t.target,this.selects.forEach(e=>e!==t.target&&(e.selected=!1))):delete this.select,this.flag=!1,this.onUpdate?.())}),o.slot.addEventListener("slotchange",()=>{this.flag=!0,delete this.select,this.selects=o.slot.assignedElements().filter(e=>{if(e instanceof o.selectClass){if(void 0!==this.selectValue)e.value===this.selectValue?(this.select=e).selected=!0:e.selected=!1;else{if(!this.select&&e.selected)return this.select=e,!0;this.select&&(e.selected=!1)}return!0}}),this.flag=!1,this.onUpdate?.()})}get value(){return this.selects[this.selects.indexOf(this.select)]?.value??""}set value(t){this.selectValue=t,0!==this.selects.length&&(this.flag=!0,this.selects.forEach(e=>{e.value===t?(e.selected=!0,this.select=e):e.selected=!1}),this.onUpdate?.(),this.flag=!1)}get selectedIndex(){return this.selects.indexOf(this.select)}}const b="s-navigation";class y extends e({style:`
:host{
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  background: var(--s-color-surface, #fffbff);
  box-shadow: var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));
  position: relative;
}
:host([mode=rail]){
  flex-direction: column;
  justify-content: flex-start;
  width: 80px;
  box-shadow: none;
  height: 100%;
  background: none;
}
::slotted(s-navigation-item){
  height: 64px;
}
:host([mode=rail]) ::slotted(s-navigation-item){
  height: 72px;
}
:host([mode=rail]) ::slotted(s-icon-button[slot=start]){
  width: 56px;
  height: 56px;
  margin: 16px 0 8px 0;
  border-radius: 12px;
}
:host([mode=rail]) ::slotted([slot=end]){
  flex-grow: 1;
}
`,template:`
<slot name="start"></slot>
<slot id="slot"></slot>
<slot name="end"></slot>
`,props:{mode:"bottom",value:""},syncProps:!0,setup(e){e=e.querySelector("#slot");const t=new g({context:this,selectClass:w,slot:e});return{expose:{get value(){return t.value},set value(e){t.value=e},get options(){return t.selects},get selectedIndex(){return t.selectedIndex}}}}}){}class w extends e({style:`
:host{
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  cursor: pointer;
  position: relative;
  font-size: .75rem;
  font-weight: 500;
  box-sizing: border-box;
  width: 100%;
  max-width: 80px;
  text-transform: capitalize;
  color: var(--s-color-on-surface-variant, #46464f);
  transition: color .1s ease-out;
}
:host([selected=true]){
  color: var(--s-color-primary, #5256a9);
}
.icon{
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 28px;
  width: 48px;
  border-radius: 14px;
}
.icon::before{
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  left: 0;
  top: 0;
  transform: scale(0);
  transition: transform .1s ease-out;
  background: var(--s-color-secondary-container, #e2e0f9);
}
:host([selected=true]) .icon::before{
  transform: scale(1);
}
.badge{
  position: absolute;
  top: 0;
  left: 50%;
  width: 24px;
  display: flex;
  justify-content: center;
  transform: translateY(-20%);
}
::slotted(svg[slot=icon]){
  width: 24px;
  height: 24px;
  fill: currentColor;
}
::slotted([slot=icon]){
  position: relative;
  color: inherit;
}
::slotted([slot=text]){
  position: relative;
  pointer-events: none;
  margin-top: 4px;
}
`,template:`
<div class="icon" part="icon">
  <slot name="icon"></slot>
  <div class="badge" part="badge">
    <slot name="badge"></slot>
  </div>
</div>
<slot name="text"></slot>
<s-ripple attached="true" class="ripple" part="ripple"></s-ripple>
`,props:{selected:!1,value:""},syncProps:["selected"],setup(){return this.addEventListener("click",()=>{this.selected||this.parentNode instanceof y&&this.dispatchEvent(new Event(b+":select",{bubbles:!0}))}),{props:{selected:()=>{this.parentNode instanceof y&&this.dispatchEvent(new Event(b+":update",{bubbles:!0}))}}}}}){}y.define(b),w.define("s-navigation-item");class U extends e({style:`
:host{
  display: inline-block;
  vertical-align: middle;
  height: 48px;
  font-size: .875rem;
  --field-padding: 16px;
  --field-border-radius: 4px;
  --field-border-width: 1px;
  --field-border-color: var(--s-color-outline, #777680);
  --field-focused-border-width: 2px;
}
.container{
  display: flex;
  height: 100%;
}
.side{
  position: relative;
}
.side::before,
.side::after{
  content: '';
  position: absolute;
  box-sizing: border-box;
  height: 100%;
  width: 100%;
  left: 0;
  top: 0;
  border-color: var(--field-border-color);
  border-width: var(--field-border-width);
  pointer-events: none;
}
.side::after{
  border-width: var(--field-focused-border-width);
  border-color: var(--s-color-primary, #5256a9);
  opacity: 0;
  transition: opacity .1s ease-out;
}
:host([focused=true]) .side::after{
  opacity: 1;
}
.cell{
  display: flex;
  align-items: center;
  position: relative;
  min-width: var(--field-border-radius);
  flex-shrink: 0;
}
.cell::before,
.cell::after{
  border-style: solid;
}
.start::before,
.start::after{
  border-right: none;
  border-radius: var(--field-border-radius) 0 0 var(--field-border-radius);
}
.end::before,
.end::after{
  border-left: none;
  border-radius: 0 var(--field-border-radius) var(--field-border-radius) 0;
}
.box{
  margin: 0 calc(var(--field-border-radius) * -1);
  flex-grow: 1;
  position: static;
}
.box::before,
.box::after{
  border-bottom-style: solid;
  left: var(--field-border-radius);
  width: calc(100% - var(--field-border-radius) * 2);
}
.view{
  display: flex;
  height: 100%;
}
.legend{
  display: flex;
  pointer-events: none;
  position: relative;
  height: 0;
}
.legend::before,
.legend::after{
  border-top-style: solid;
  left: var(--field-border-radius);
  width: calc(100% - var(--field-border-radius) * 2);
  content: none;
}
:host([labelfixed=false]) .legend::before,
:host([labelfixed=false]) .legend::after{
  content: '';
}
.label{
  display: flex;
  align-items: center;
  transform: translateY(-50%) scale(.8571428571428571);
  color: var(--field-border-color);
  transition: color .1s ease-out, transform .1s ease-out;
  position: relative;
  height: fit-content;
}
::slotted([slot=label]){
  height: 48px;
  display: flex;
  align-items: center;
  white-space: nowrap;
  line-height: 1;
}
:host([focused=true]) .label{
  color: var(--s-color-primary, #5256a9);
}
:host([labelfixed=false]) .label{
  transform: translateY(0) scale(1);
}
.left,.right{
  height: 0;
  width: var(--field-padding);
}
.right{
  flex-grow: 1;
}
.left::before,
.left::after,
.right::before,
.right::after{
  border-top-style: solid;
  left: var(--field-border-radius);
  width: calc(100% - var(--field-border-radius));
}
.right::before,
.right::after{
  left: 0;
}
::slotted([slot=start]){
  margin-right: var(--field-border-radius);
}
::slotted([slot=view]){
  padding: 0 var(--field-padding);
  display: flex;
  align-items: center;
  height: 100%;
  border-radius: var(--field-border-radius);
}
::slotted([slot=end]){
  margin-left: var(--field-border-radius);
}
`,template:`
<div class="container side">
  <slot name="start" class="start side cell"></slot>
  <div class="box side">
    <div class="legend side">
      <div class="left side"></div>
      <slot name="label" class="label"></slot>
      <div class="right side"></div>
    </div>
    <slot name="view" class="view"></slot>
  </div>
  <slot name="end" class="end side cell"></slot>
</div>
`,props:{focused:!1,labelFixed:!0},syncProps:!0,setup(){}}){}U.define("s-field");class Q extends e({style:`
:host{
  display: block;
}
.container{
  grid-template-rows: 1fr;
  display: grid;
  overflow: hidden;
  transition: grid-template-rows .2s ease-out;
}
:host([folded=true]) .container{
  grid-template-rows: 0fr;
}
.view{
  display: block;
  min-height: 0;
}
`,template:`
<slot name="trigger"></slot>
<div class="container" part="container">
  <slot class="view" part="view"></slot>
</div>
`,props:{folded:!1},syncProps:["folded"],setup(e){e.querySelector("slot[name=trigger]").addEventListener("click",()=>this.folded=!this.folded)}}){}Q.define("s-fold");const k=document.createElement("style");k.textContent=`
::view-transition-old(root),
::view-transition-new(root) {
  animation: none;
  mix-blend-mode: normal;
}`;class J extends e({style:"\n:host{\n  display: flow-root;\n  color: var(--s-color-on-background);\n  background: var(--s-color-background);\n  font-family: Roboto, system-ui;\n  height: 100%;\n  --s-color-scrim: #000000;\n\n  --s-color-primary: #5256a9;\n  --s-color-on-primary: #ffffff;\n  --s-color-primary-container: #e1e0ff;\n  --s-color-on-primary-container: #090764;\n  --s-color-secondary: #5d5d72;\n  --s-color-on-secondary: #ffffff;\n  --s-color-secondary-container: #e2e0f9;\n  --s-color-on-secondary-container: #191a2c;\n  --s-color-tertiary: #79536a;\n  --s-color-on-tertiary: #ffffff;\n  --s-color-tertiary-container: #ffd8ed;\n  --s-color-on-tertiary-container: #2e1125;\n  --s-color-error: #ba1a1a;\n  --s-color-on-error: #ffffff;\n  --s-color-error-container: #ffdad6;\n  --s-color-on-error-container: #410002;\n  --s-color-background: #fffbff;\n  --s-color-on-background: #1c1b1f;\n  --s-color-outline: #777680;\n  --s-color-outline-variant: #c7c5d0;\n  --s-color-surface: #fffbff;\n  --s-color-on-surface: #1c1b1f;\n  --s-color-surface-variant: #e4e1ec;\n  --s-color-on-surface-variant: #46464f;\n  --s-color-inverse-surface: #313034;\n  --s-color-inverse-on-surface: #f3eff4;\n  --s-color-inverse-primary: #c0c1ff;\n  --s-color-surface-container: #f0edf1;\n  --s-color-surface-container-high: #eae7ec;\n  --s-color-surface-container-highest: #e5e1e6;\n  --s-color-surface-container-low: #f6f2f7;\n  --s-color-surface-container-lowest: #ffffff;\n\n  --s-color-dark-primary: #c0c1ff;\n  --s-color-dark-on-primary: #222578;\n  --s-color-dark-primary-container: #3a3d8f;\n  --s-color-dark-on-primary-container: #e1e0ff;\n  --s-color-dark-secondary: #c5c4dd;\n  --s-color-dark-on-secondary: #2e2f42;\n  --s-color-dark-secondary-container: #454559;\n  --s-color-dark-on-secondary-container: #e2e0f9;\n  --s-color-dark-tertiary: #e8b9d4;\n  --s-color-dark-on-tertiary: #46263b;\n  --s-color-dark-tertiary-container: #5f3c52;\n  --s-color-dark-on-tertiary-container: #ffd8ed;\n  --s-color-dark-error: #ffb4ab;\n  --s-color-dark-on-error: #690005;\n  --s-color-dark-error-container: #93000a;\n  --s-color-dark-on-error-container: #ffb4ab;\n  --s-color-dark-background: #1c1b1f;\n  --s-color-dark-on-background: #e5e1e6;\n  --s-color-dark-outline: #918f9a;\n  --s-color-dark-outline-variant: #46464f;\n  --s-color-dark-surface: #1c1b1f;\n  --s-color-dark-on-surface: #e5e1e6;\n  --s-color-dark-surface-variant: #46464f;\n  --s-color-dark-on-surface-variant: #c7c5d0;\n  --s-color-dark-inverse-surface: #e5e1e6;\n  --s-color-dark-inverse-on-surface: #313034;\n  --s-color-dark-inverse-primary: #5256a9;\n  --s-color-dark-surface-container: #201f23;\n  --s-color-dark-surface-container-high: #2a292d;\n  --s-color-dark-surface-container-highest: #353438;\n  --s-color-dark-surface-container-low: #1c1b1f;\n  --s-color-dark-surface-container-lowest: #0e0e11;\n\n  --s-elevation-level1: 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12);\n  --s-elevation-level2: 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12);\n  --s-elevation-level3: 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12);\n  --s-elevation-level4: 0 8px 10px -5px rgba(0, 0, 0, .2), 0 16px 24px 2px rgba(0, 0, 0, .14), 0 6px 30px 5px rgba(0, 0, 0, .12);\n  --s-elevation-level5: 0 10px 14px -6px rgba(0, 0, 0, .2), 0 22px 35px 3px rgba(0, 0, 0, .14), 0 8px 42px 7px rgba(0, 0, 0, .12);\n}\n:host([theme=dark]){\n  \n  --s-color-primary: var(--s-color-dark-primary) !important;\n  --s-color-on-primary: var(--s-color-dark-on-primary) !important;\n  --s-color-primary-container: var(--s-color-dark-primary-container) !important;\n  --s-color-on-primary-container: var(--s-color-dark-on-primary-container) !important;\n  --s-color-secondary: var(--s-color-dark-secondary) !important;\n  --s-color-on-secondary: var(--s-color-dark-on-secondary) !important;\n  --s-color-secondary-container: var(--s-color-dark-secondary-container) !important;\n  --s-color-on-secondary-container: var(--s-color-dark-on-secondary-container) !important;\n  --s-color-tertiary: var(--s-color-dark-tertiary) !important;\n  --s-color-on-tertiary: var(--s-color-dark-on-tertiary) !important;\n  --s-color-tertiary-container: var(--s-color-dark-tertiary-container) !important;\n  --s-color-on-tertiary-container: var(--s-color-dark-on-tertiary-container) !important;\n  --s-color-error: var(--s-color-dark-error) !important;\n  --s-color-on-error: var(--s-color-dark-on-error) !important;\n  --s-color-error-container: var(--s-color-dark-error-container) !important;\n  --s-color-on-error-container: var(--s-color-dark-on-error-container) !important;\n  --s-color-background: var(--s-color-dark-background) !important;\n  --s-color-on-background: var(--s-color-dark-on-background) !important;\n  --s-color-outline: var(--s-color-dark-outline) !important;\n  --s-color-outline-variant: var(--s-color-dark-outline-variant) !important;\n  --s-color-surface: var(--s-color-dark-surface) !important;\n  --s-color-on-surface: var(--s-color-dark-on-surface) !important;\n  --s-color-surface-variant: var(--s-color-dark-surface-variant) !important;\n  --s-color-on-surface-variant: var(--s-color-dark-on-surface-variant) !important;\n  --s-color-inverse-surface: var(--s-color-dark-inverse-surface) !important;\n  --s-color-inverse-on-surface: var(--s-color-dark-inverse-on-surface) !important;\n  --s-color-inverse-primary: var(--s-color-dark-inverse-primary) !important;\n  --s-color-surface-container: var(--s-color-dark-surface-container) !important;\n  --s-color-surface-container-high: var(--s-color-dark-surface-container-high) !important;\n  --s-color-surface-container-highest: var(--s-color-dark-surface-container-highest) !important;\n  --s-color-surface-container-low: var(--s-color-dark-surface-container-low) !important;\n  --s-color-surface-container-lowest: var(--s-color-dark-surface-container-lowest) !important;\n\n}\n@media (prefers-color-scheme: dark){\n  :host([theme=auto]){\n    \n  --s-color-primary: var(--s-color-dark-primary) !important;\n  --s-color-on-primary: var(--s-color-dark-on-primary) !important;\n  --s-color-primary-container: var(--s-color-dark-primary-container) !important;\n  --s-color-on-primary-container: var(--s-color-dark-on-primary-container) !important;\n  --s-color-secondary: var(--s-color-dark-secondary) !important;\n  --s-color-on-secondary: var(--s-color-dark-on-secondary) !important;\n  --s-color-secondary-container: var(--s-color-dark-secondary-container) !important;\n  --s-color-on-secondary-container: var(--s-color-dark-on-secondary-container) !important;\n  --s-color-tertiary: var(--s-color-dark-tertiary) !important;\n  --s-color-on-tertiary: var(--s-color-dark-on-tertiary) !important;\n  --s-color-tertiary-container: var(--s-color-dark-tertiary-container) !important;\n  --s-color-on-tertiary-container: var(--s-color-dark-on-tertiary-container) !important;\n  --s-color-error: var(--s-color-dark-error) !important;\n  --s-color-on-error: var(--s-color-dark-on-error) !important;\n  --s-color-error-container: var(--s-color-dark-error-container) !important;\n  --s-color-on-error-container: var(--s-color-dark-on-error-container) !important;\n  --s-color-background: var(--s-color-dark-background) !important;\n  --s-color-on-background: var(--s-color-dark-on-background) !important;\n  --s-color-outline: var(--s-color-dark-outline) !important;\n  --s-color-outline-variant: var(--s-color-dark-outline-variant) !important;\n  --s-color-surface: var(--s-color-dark-surface) !important;\n  --s-color-on-surface: var(--s-color-dark-on-surface) !important;\n  --s-color-surface-variant: var(--s-color-dark-surface-variant) !important;\n  --s-color-on-surface-variant: var(--s-color-dark-on-surface-variant) !important;\n  --s-color-inverse-surface: var(--s-color-dark-inverse-surface) !important;\n  --s-color-inverse-on-surface: var(--s-color-dark-inverse-on-surface) !important;\n  --s-color-inverse-primary: var(--s-color-dark-inverse-primary) !important;\n  --s-color-surface-container: var(--s-color-dark-surface-container) !important;\n  --s-color-surface-container-high: var(--s-color-dark-surface-container-high) !important;\n  --s-color-surface-container-highest: var(--s-color-dark-surface-container-highest) !important;\n  --s-color-surface-container-low: var(--s-color-dark-surface-container-low) !important;\n  --s-color-surface-container-lowest: var(--s-color-dark-surface-container-lowest) !important;\n\n  }\n}\n",template:"<slot></slot>",props:{theme:"light"},syncProps:["theme"],setup(){return{expose:{toggle:(e,t)=>{if(e!==this.theme)if(document.startViewTransition){const o={x:innerWidth/2,y:0};t&&(t=t.getBoundingClientRect(),o.x=t.x+t.width/2,o.y=t.y+t.height/2),document.head.appendChild(k);t=document.startViewTransition(()=>this.theme=e);const r=Math.hypot(Math.max(o.x,innerWidth-o.x),Math.max(o.y,innerHeight-o.y));t.ready.then(()=>document.documentElement.animate({clipPath:[`circle(0px at ${o.x}px ${o.y}px)`,`circle(${r}px at ${o.x}px ${o.y}px)`]},{duration:400,easing:"ease-out",pseudoElement:"::view-transition-new(root)"})),t.finished.then(()=>document.head.removeChild(k))}else this.theme=e}}}}}){}J.define("s-page");const E="s-picker";class q extends e({style:`
:host{
  display: inline-block;
  vertical-align: middle;
  font-size: .875rem;
  --picker-border-radius: 4px;
  --picker-border-color: var(--s-color-outline, #777680);
  --picker-border-width: 1px;
  --picker-padding: 16px;
  --picker-height: 48px;
}
:host([disabled=true]){
  pointer-events: none;
  opacity: .38;
}
.popup{
  display: block;
  cursor: pointer;
}
.field{

}
.view{
  width: 100%;
  padding-left: var(--picker-padding);
}
.ripple{
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}
svg{
  width: 24px;
  height: 24px;
  fill: var(--s-color-on-surface-variant, #46464f);
  padding: 2px;
  box-sizing: border-box;
  flex-shrink: 0;
  margin-left: -12px;
  margin-right: 4px;
}
.container{
  max-height: 324px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  font-size: .875rem;
  padding: 2px 0;
}
`,template:`
<s-popup class="popup">
  <slot name="trigger" slot="trigger">
    <s-field labelfixed="false" class="field">
      <div class="label" slot="label"></div>
      <div slot="view" class="view"></div>
      <svg viewBox="0 -960 960 960" slot="end">
          <path d="M480-360 280-560h400L480-360Z"></path>
        </svg>
      <s-ripple class="ripple" slot="view" attached="true"></s-ripple>
    </s-field>
  </slot>
  <s-scroll-view class="container" part="container">
    <slot id="slot"></slot>
  </s-scroll-view>
</s-popup>
`,props:{disabled:!1,label:"",value:""},syncProps:["disabled"],setup(e){const t=e.querySelector(".popup"),o=e.querySelector(".field"),r=e.querySelector(".label"),s=e.querySelector(".view");var i=e.querySelector("#slot");const a=e.querySelector(".container"),n=new g({context:this,selectClass:L,slot:i});return t.addEventListener("show",()=>{o.focused=!0,o.labelFixed=!0,n.select&&a.scrollTo({top:n.select.offsetTop-a.offsetTop-a.offsetHeight/2+n.select.offsetHeight/2})}),t.addEventListener("dismiss",()=>{o.focused=!1,n.select||(o.labelFixed=!1)}),n.onUpdate=()=>{n.select?(o.labelFixed=!0,s.textContent=n.select.textContent):(o.labelFixed=!1,s.textContent="")},n.onSelect=()=>t.dismiss(),{expose:{get value(){return n.value},set value(e){n.value=e},get options(){return n.selects},get selectedIndex(){return n.selectedIndex},show:t.show.bind(t),toggle:t.toggle.bind(t),dismiss:t.dismiss.bind(t)},props:{label:e=>r.textContent=e}}}}){}class L extends e({style:`
:host{
  display: flex;
  align-items: center;
  height: 40px;
  margin: 2px 4px;
  cursor: pointer;
  position: relative;
  border-radius: 4px;
  flex-shrink: 0;
  padding: 0 12px;
}
:host([selected=true]){
  background: var(--s-color-secondary-container, #e2e0f9);
  color: var(--s-color-on-secondary-container, #191a2c);
}
.text{
  flex-grow: 1;
  display: flex;
  align-items: center;
  height: 100%;
  white-space: nowrap;
}
::slotted(svg){
  fill: var(--s-color-on-surface-variant, #46464f);
}
::slotted([slot]){
  height: 24px;
  width: 24px;
  flex-shrink: 0;
}
::slotted([slot=start]){
  margin-left: -4px;
  margin-right: 8px;
}
::slotted([slot=end]){
  margin-left: 8px;
  margin-right: -6px;
}
`,template:`
<slot name="start"></slot>
<div class="text" part="text">
  <slot></slot>
</div>
<slot name="end"></slot>
<s-ripple part="ripple" attached="true" ></s-ripple>
`,props:{selected:!1,value:""},syncProps:["selected"],setup(){return this.addEventListener("click",()=>{this.selected||this.parentNode instanceof q&&this.dispatchEvent(new Event(E+":select",{bubbles:!0}))}),{props:{selected:()=>{this.parentNode instanceof q&&this.dispatchEvent(new Event(E+":update",{bubbles:!0}))}}}}}){}q.define(E),L.define("s-picker-item");const S="s-popup-menu";class C extends e({style:`
:host{
  display: inline-block;
  vertical-align: middle;
  font-size: .875rem;
  color: var(--s-color-on-surface, #1c1b1f);
}
.popup{
  display: block;
}
.container{
  padding: 2px 0;
  max-width: 224px;
  min-height: auto;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
}
::slotted(s-popup-menu[group=start]){
  border-top: solid 1px var(--s-color-outline-variant, #c7c5d0);
  margin-top: 2px;
  padding-top: 2px;
}
::slotted(s-popup-menu[group=end]){
  border-bottom: solid 1px var(--s-color-outline-variant, #c7c5d0);
  margin-bottom: 2px;
  padding-bottom: 2px;
}
`,template:`
<s-popup class="popup">
  <slot slot="trigger" name="trigger"></slot>
  <s-scroll-view class="container" part="container">
    <slot></slot>
  </s-scroll-view>
</s-popup>
`,props:{group:""},syncProps:["group"],setup(e){const t=e.querySelector(".popup");e=e.querySelector("slot[name=trigger]");const o=t.show.bind(t),r=t.dismiss.bind(t);var s=t.toggle.bind(t);return e.addEventListener("click",e=>{e.stopPropagation(),o()}),this.addEventListener(S+":click",e=>{e.stopPropagation(),r()}),{mounted:()=>{this.parentNode instanceof C&&t.setAttribute("showalign","right")},expose:{show:o,dismiss:r,toggle:s}}}}){}class K extends e({style:`
:host{
  display: flex;
  align-items: center;
  height: 40px;
  margin: 2px 4px;
  padding: 0 12px;
  cursor: pointer;
  position: relative;
  border-radius: 4px;
}
.text{
  flex-grow: 1;
  white-space: nowrap;
  display: flex;
  align-items: center;
}
::slotted(svg){
  fill: var(--s-color-on-surface-variant, #46464f);
}
::slotted([slot]){
  height: 24px;
  width: 24px;
  flex-shrink: 0;
}
::slotted([slot=start]){
  margin-left: -4px;
  margin-right: 8px;
}
::slotted([slot=end]){
  margin-left: 8px;
  margin-right: -6px;
}
`,template:`
<slot name="start"></slot>
<div class="text" part="text">
  <slot></slot>
</div>
<slot name="end"></slot>
<s-ripple attached="true"></s-ripple>
`,props:{},setup(){this.addEventListener("click",()=>this.dispatchEvent(new Event(S+":click",{bubbles:!0})))}}){}C.define(S),K.define("s-popup-menu-item");class ee extends e({style:`
:host{
  display: inline-flex;
  align-items: center;
  vertical-align: middle;
  cursor: pointer;
  white-space: nowrap;
  height: 40px;
  --radio-button-color: var(--s-color-primary, #5256a9);
}
:host([disabled=true]){
  pointer-events: none !important;
}
.container{
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  width: 40px;
  aspect-ratio: 1;
  -webkit-aspect-ratio: 1;
  border-radius: 50%;
  position: relative;
  color: var(--radio-button-color);
}
:host([disabled=true]) .container{
  color: var(--s-color-on-surface, #1c1b1f) !important;
  opacity: .38 !important;
}
.icon{
  width: 60%;
  height: 60%;
  fill: currentColor;
}
.icon,
.ripple{
  color: var(--s-color-on-surface-variant, #46464f);
}
:host([checked=true]) .icon,
:host([checked=true]) .ripple,
:host([checked=true]) .checked{
  color: currentColor;
}
.checked{
  position: absolute;
  background: currentColor;
  border-radius: 50%;
  transform: scale(0);
  opacity: 0;
  transition: transform .1s ease-out, opacity .1s ease-out;
}
:host([checked=true]) .checked{
  transform: scale(.4);
  opacity: 1;
}
`,template:`
<div class="container" part="container">
  <svg class="icon" viewBox="0 -960 960 960">
    <path d="M480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"></path>
  </svg>
  <div class="icon checked"></div>
  <s-ripple class="ripple" attached="true" part="ripple"></s-ripple>
</div>
<slot></slot>
`,props:{disabled:!1,checked:!1,name:"",value:""},syncProps:!0,setup(){this.addEventListener("click",()=>{this.checked=!0,this.name&&document.querySelectorAll(`${this.tagName}[name='${this.name}']`).forEach(e=>{e!==this&&(e.checked=!1)}),this.dispatchEvent(new Event("change"))})}}){}ee.define("s-radio-button");d={readOnly:!1,max:10,min:0,value:5,step:1};class te extends e({style:`
:host{
  display: inline-flex;
  vertical-align: middle;
  position: relative;
  overflow: hidden;
  font-size: 24px;
  width: calc(1em * 5);
  height: 1em;
}
.track{
  width: 100%;
  display: flex;
}
.track svg,
::slotted([slot=track]){
  fill: var(--s-color-secondary-container, #e2e0f9);
  filter: drop-shadow(1em 0 0 var(--s-color-secondary-container, #e2e0f9)) drop-shadow(2em 0 0 var(--s-color-secondary-container, #e2e0f9)) drop-shadow(3em 0 0 var(--s-color-secondary-container, #e2e0f9));
}
.indicator{
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 50%;
  overflow: hidden;
  display: flex;
}
.indicator svg,
::slotted([slot=indicator]){
  fill: var(--s-color-primary, #5256a9);
  filter: drop-shadow(1em 0 0 var(--s-color-primary, #5256a9)) drop-shadow(2em 0 0 var(--s-color-primary, #5256a9)) drop-shadow(3em 0 0 var(--s-color-primary, #5256a9)) drop-shadow(4em 0 0 var(--s-color-primary, #5256a9));
}
svg,
::slotted(*){
  height: 100%;
  aspect-ratio: 1;
  -webkit-aspect-ratio: 1;
  flex-shrink: 0;
}
input{
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  cursor: pointer;
  opacity: 0;
  margin: 0;
}
:host([readonly=true]) input{
  display: none;
}
`,template:`
<slot name="track" class="track" part="track">
  <svg viewBox="0 -960 960 960">
    <path d="m354-287 126-76 126 77-33-144 111-96-146-13-58-136-58 135-146 13 111 97-33 143ZM233-120l65-281L80-590l288-25 112-265 112 265 288 25-218 189 65 281-247-149-247 149Zm247-350Z"/>
  </svg>
</slot>
<slot name="indicator" class="indicator" part="indicator">
  <svg viewBox="0 -960 960 960">
    <path d="m233-120 65-281L80-590l288-25 112-265 112 265 288 25-218 189 65 281-247-149-247 149Z"/>
  </svg>
</slot>
<input
  type="range"
  max="${d.max}"
  min="${d.min}"
  step="${d.step}"
  value="${d.value}"
/>
`,props:d,syncProps:["readOnly"],setup(e){const t=e.querySelector(".indicator"),o=e.querySelector("input"),r=()=>{var e=100*(Number(o.value)-this.min)/this.max-this.min;t.style.width=e+"%"};return o.addEventListener("change",()=>this.dispatchEvent(new Event("change"))),o.addEventListener("input",()=>{this.value=Number(o.value),this.dispatchEvent(new Event("input"))}),{props:{max:e=>{o.max=String(e),r()},min:e=>{o.min=String(e),r()},step:e=>{o.step=String(e),r()},value:e=>{o.value=String(e),r()}}}}}){}te.define("s-rate");class oe extends e({style:`
:host{
  display: inline-flex;
  vertical-align: middle;
  max-width: 520px;
  min-width: 240px;
  height: 48px;
  background: var(--s-color-surface-container-high, #eae7ec);
  color: var(--s-color-on-surface, #1c1b1f);
  border-radius: 24px;
  font-size: .875rem;
  position: relative;
}
:host([size=small]){
  height: 40px;
  min-width: 196px;
  border-radius: 20px;
}
:host([size=large]){
  height: 56px;
  min-width: 280px;
  font-size: 1rem;
  border-radius: 28px;
}
.container{
  display: flex;
  align-items: center;
  height: 100%;
  position: relative;
  flex-grow: 1;
}
:host(:focus-within) .container{
  z-index: 1;
}
.dropdown{
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  pointer-events: none;
  background: inherit;
  box-shadow: var(--s-elevation-level2, 0 2px 4px -1px rgba(0, 0, 0, .2), 0 4px 5px 0 rgba(0, 0, 0, .14), 0 1px 10px 0 rgba(0, 0, 0, .12));
  border-radius: 4px;
  opacity: 0;
  transition: opacity .1s ease-out;
}
:host(:focus-within) .dropdown{
  opacity: 1;
  pointer-events: auto;
  z-index: 1;
}
::slotted([slot=dropdown]){
  border-top: solid 1px var(--s-color-outline-variant, #c7c5d0);
  margin-top: 48px;
  border-radius: 4px;
}
:host([size=small]:focus-within) ::slotted([slot=dropdown]){
  margin-top: 40px;
}
:host([size=large]:focus-within) ::slotted([slot=dropdown]){
  margin-top: 56px;
}
::slotted(input[type=text]){
  border: none;
  padding: 0 16px;
  height: 100%;
  width: 100%;
  flex-grow: 1;
  background: none;
  outline: none;
  font-size: inherit;
  color: inherit;
  box-sizing: border-box;
  line-height: 1;
  font-family: inherit;
}
::slotted(input[type=text])::placeholder{
  color: var(--s-color-outline, #777680);
}
:host([size=large]) ::slotted(input[type=text]){
  padding: 0 24px;
}
::slotted([slot]){
  flex-shrink: 0;
}
::slotted(svg){
  height: 24px;
  width: 24px;
  fill: var(--s-color-on-surface-variant, #46464f);
}
::slotted(s-icon[slot=start]),
::slotted(svg[slot=start]){
  margin: 0 -6px 0 12px;
}
::slotted(s-icon[slot=end]),
::slotted(svg[slot=end]){
  margin: 0 12px 0 -6px;
}
:host([size=small]) ::slotted(s-icon-button[slot=start]),
:host([size=small]) ::slotted(s-icon-button[slot=end]){
  width: 40px;
  height: 40px;
}
::slotted(s-icon-button[slot=start]){
  margin: 0 -12px 0 4px;
}
::slotted(s-icon-button[slot=end]),{
  margin: 0 4px 0 -12px;
}
:host([size=small]) ::slotted(s-icon-button[slot=start]){
  margin: 0 -12px 0 0;
}
:host([size=small]) ::slotted(s-icon-button[slot=end]){
  margin: 0 0 0 -12px;
}
:host([size=small]) ::slotted(s-icon[slot=start]),
:host([size=small]) ::slotted(svg[slot=start]){
  margin: 0 -6px 0 8px;
}
:host([size=small]) ::slotted(s-icon[slot=end]),
:host([size=small]) ::slotted(svg[slot=end]){
  margin: 0 8px 0 -6px;
}
:host([size=large]) ::slotted(s-icon-button[slot=start]){
  margin: 0 -16px 0 8px;
}
:host([size=large]) ::slotted(s-icon-button[slot=end]){
  margin: 0 8px 0 -16px;
}
:host([size=large]) ::slotted(s-icon[slot=start]),
:host([size=large]) ::slotted(svg[slot=start]){
  margin: 0 -8px 0 16px;
}
:host([size=large]) ::slotted(s-icon[slot=end]),
:host([size=large]) ::slotted(svg[slot=end]){
  margin: 0 16px 0 -8px;
}
`,template:`
<div class="dropdown" part="dropdown">
  <slot name="dropdown"></slot>
</div>
<div class="container" part="container">
  <slot name="start"></slot>
  <slot></slot>
  <slot name="end"></slot>
</div>
`,props:{size:"medium"},syncProps:!0,setup(e){e.querySelector("[name=dropdown]").addEventListener("mousedown",e=>e.preventDefault())}}){}oe.define("s-search");const T="s-segmented-button";class z extends e({style:`
:host{
  display: inline-flex;
  align-items: center;
  vertical-align: middle;
  border: solid 1px var(--s-color-outline, #777680);
  border-radius: 20px;
  height: 40px;
  overflow: hidden;
}
`,template:"<slot></slot>",props:{value:""},setup(e){e=e.querySelector("slot");const t=new g({context:this,selectClass:P,slot:e});return{expose:{get value(){return t.value},set value(e){t.value=e},get options(){return t.selects},get selectedIndex(){return t.selectedIndex}}}}}){}class P extends e({style:`
:host{
  flex-basis: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--s-color-on-surface, #1c1b1f);
  height: 100%;
  min-width: 48px;
  padding: 0 16px;
  text-transform: capitalize;
  font-weight: 500;
  font-size: .875rem;
  position: relative;
  cursor: pointer;
  box-sizing: border-box;
  border-left: solid 1px var(--s-color-outline, #777680);
}
:host(:first-child){
  border-left-color: transparent;
  margin-left: -1px;
}
:host([selected=true]){
  background: var(--s-color-secondary-container, #e2e0f9);
  color: var(--s-color-on-secondary-container, #191a2c);
}
:host([disabled=true]){
  pointer-events: none;
  color: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 38%, transparent);
}
::slotted([slot]){
  width: 18px;
  height: 18px;
  color: inherit;
  fill: currentColor;
  flex-shrink: 0;
}
::slotted([slot=start]){
  margin-right: 4px;
}
::slotted([slot=end]){
  margin-right: 4px;
}
`,template:`
<slot name="start"></slot>
<slot></slot>
<slot name="end"></slot>
<s-ripple class="ripple" attached="true" part="ripple"></s-ripple>
`,props:{selected:!1,disabled:!1,selectable:!0,value:""},syncProps:["selected","disabled"],setup(){return this.addEventListener("click",()=>{this.parentNode instanceof z&&!this.selected&&this.selectable&&this.dispatchEvent(new Event(T+":select",{bubbles:!0}))}),{props:{selected:()=>{this.parentNode instanceof z&&this.dispatchEvent(new Event(T+":update",{bubbles:!0}))}}}}}){}z.define(T),P.define("s-segmented-button-item");class Z extends e({style:`
:host{
  display: inline-block;
  vertical-align: middle;
}
.wrapper{
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: var(--z-index, 2);
  pointer-events: none;
  display: flex;
  justify-content: center;
  align-items: flex-end;
}
.scrim{
  background: color-mix(in srgb, var(--s-color-scrim, #000000) 80%, transparent);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  transition: opacity .2s ease-out;
  -webkit-backdrop-filter: blur(4px);
  backdrop-filter: blur(4px);
  pointer-events: none;
}
.wrapper.show .scrim{
  opacity: 1;
  pointer-events: auto;
}
.container{
  position: relative;
  border-radius: 24px 24px 0 0;
  max-width: 520px;
  width: 100%;
  max-height: calc(100% - 56px);
  background: var(--s-color-surface-container-highest, #e5e1e6);
  display: flex;
  flex-direction: column;
  top: 100%;
  --z-index: var(--z-index, 2);
}
.show.wrapper .container{
  top: 0;
  pointer-events: auto;
  box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
}
.indicator{
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 18px;
  cursor: pointer;
  flex-shrink: 0;
}
.indicator::before{
  content: '';
  width: 40px;
  height: 4px;
  border-radius: 2px;
  background: var(--s-color-on-surface-variant, #46464f);
  opacity: .4;
}
::slotted([slot=view]){
  flex-grow: 1;
  max-height: 280px;
  overscroll-behavior: none;
}
`,template:`
<slot name="trigger"></slot>
<div class="wrapper" part="wrapper">
  <div class="scrim" part="scrim"></div>
  <div class="container" part="container">
    <div class="indicator" part="indicator"></div>
    <slot></slot>
  </div>
</div>
`,props:{},setup(e){var t=e.querySelector("slot[name=trigger]");const o=e.querySelector(".wrapper");var r=e.querySelector(".scrim");const s=e.querySelector(".container"),i={duration:200,easing:"ease-out"},a=e=>{this.dispatchEvent(new CustomEvent("show",{cancelable:!0,detail:{source:e}}))&&(o.classList.add("show"),e=s.animate([{transform:"translateY(100%)",top:0},{transform:"translateY(0%)",top:0}],i),this.dispatchEvent(new Event("show")),e.addEventListener("finish",()=>this.dispatchEvent(new Event("showed"))))},n=e=>{this.dispatchEvent(new CustomEvent("dismiss",{cancelable:!0,detail:{source:e}}))&&(o.classList.remove("show"),e=s.animate([{transform:"translateY(0%)",top:0},{transform:"translateY(100%)",top:0}],i),this.dispatchEvent(new Event("dismiss")),e.addEventListener("finish",()=>this.dispatchEvent(new Event("dismissed"))))};return t.addEventListener("click",()=>a("TRIGGER")),r.addEventListener("click",()=>n("SCRIM")),{expose:{show:()=>a(),dismiss:()=>n()}}}}){static show=e=>{let t=document.body;var o=document.body.firstElementChild;o&&"S-PAGE"===o.tagName&&(t=o);const r=new Z;return"function"==typeof e||e instanceof HTMLElement?e instanceof HTMLElement?r.appendChild(e):e(r):(e.root&&(t=e.root),e.view instanceof HTMLElement?r.appendChild(e.view):e.view(r)),t.appendChild(r),r.addEventListener("dismissed",()=>t.removeChild(r)),requestAnimationFrame(r.show),r}}Z.define("s-bottom-sheet");d={disabled:!1,labeled:!1,max:100,min:0,step:1,value:0};class re extends e({style:`
:host{
  display: block;
  color: var(--s-color-primary, #5256a9);
  height: 16px;
  cursor: pointer;
  position: relative;
}
:host([disabled=true]){
  pointer-events: none;
  color: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 38%, transparent) !important;
}
.container{
  height: 100%;
  display: flex;
  align-items: center;
  position: relative;
  pointer-events: none;
}
.track,
.indicator{
  height: 4px;
  border-radius: 2px;
  position: absolute;
  right: 0;
}
.track{
  background: var(--s-color-secondary-container, #e2e0f9);
  width: calc(100% - 20px);
}
:host([disabled=true]) .track{
  background: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 12%, transparent) !important;
}
.indicator{
  left: 0;
  width: 0;
  background: currentColor;
}
.handle{
  position: relative;
  height: 16px;
  width: 16px;
  flex-shrink: 0;
  display: flex;
  justify-content: center;
}
.thumb{
  position: relative;
  height: 100%;
  width: 100%;
  border-radius: 50%;
  background: currentColor;
  box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
}
.thumb::before{
  content: '';
  position: absolute;
  left: -10px;
  top: -10px;
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background: color-mix(in srgb, currentColor 20%, transparent);
  transform: scale(0);
  transition: transform .1s ease-out;
}
.active .thumb::before{
  transform: scale(1);
}
.label{
  position: absolute;
  bottom: 100%;
  margin-bottom: 12px;
  background: var(--s-color-inverse-surface, #313034);
  color: var(--s-color-inverse-on-surface, #f3eff4);
  justify-content: center;
  align-items: center;
  border-radius: 4px;
  padding: 0 6px;
  height: 24px;
  font-size: .75rem;
  transform: scale(0);
  transform-origin: center bottom;
  transition: transform .1s ease-out;
  opacity: .85;
  z-index: var(--z-index, 1);
  display: none;
}
.active .label{
  transform: scale(1);
}
:host([labeled=true]) .label{
  display: flex;
}
input{
  margin: 0;
  height: 100%;
  width: 100%;
  cursor: inherit;
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;
}
`,template:`
<div class="container" part="container">
  <div class="indicator" part="indicator"></div>
  <div class="track" part="track"></div>
  <div class="handle" part="handle">
    <div class="thumb" part="thumb"></div>
    <div class="label" part="label"></div>
  </div>
</div>
<input
  type="range"
  max="${d.max}"
  min="${d.min}"
  step="${d.step}"
  value="${d.value}"
/>
`,props:d,syncProps:["disabled","labeled"],setup(e){const t=e.querySelector(".container"),o=e.querySelector(".indicator"),r=e.querySelector(".track"),s=e.querySelector(".handle"),i=e.querySelector(".label"),a=e.querySelector("input"),n=()=>{var e=Number(a.value),t=100*(e-this.min)/this.max-this.min;s.style.left=`calc(${t}% - ${.16*t}px)`,o.style.width=`calc(${t}% - ${4+.16*t}px)`,r.style.width=`calc(${100-t}% - ${20-.16*t}px)`,i.textContent=String(e)};return a.addEventListener("change",()=>this.dispatchEvent(new Event("change"))),a.addEventListener("input",()=>{this.value=Number(a.value),this.dispatchEvent(new Event("input"))}),a.addEventListener("mousedown",e=>0===e.button&&!l.touched&&t.classList.add("active")),a.addEventListener("mouseup",()=>!l.touched&&t.classList.remove("active")),a.addEventListener("touchstart",()=>l.touched&&t.classList.add("active"),{passive:!0}),a.addEventListener("touchend",()=>l.touched&&t.classList.remove("active"),{passive:!0}),a.addEventListener("touchcancel",()=>l.touched&&t.classList.remove("active"),{passive:!0}),{props:{max:e=>{a.max=String(e),n()},min:e=>{a.min=String(e),n()},step:e=>{a.step=String(e),n()},value:e=>{a.value=String(e),n()}}}}}){}re.define("s-slider");const M=[];class H extends e({style:`
:host{
  display: inline-block;
  vertical-align: middle;
}
.wrapper{
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: var(--z-index, 2);
  overflow: hidden;
  box-sizing: border-box;
  padding: 16px;
  display: flex;
  align-items: flex-end;
  justify-content: center;
  --offset-direction: -1;
  transform: translateY(calc(var(--offset) * var(--offset-direction)));
  transition: transform .2s ease-out;
}
.container{
  background: var(--s-color-inverse-surface, #313034);
  color: var(--s-color-inverse-on-surface, #f3eff4);
  min-height: 48px;
  border-radius: 4px;
  box-shadow: var(--s-elevation-level3, 0 5px 5px -3px rgba(0, 0, 0, .2), 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12));
  line-height: 1.6;
  display: inline-flex;
  align-items: center;
  min-width: 320px;
  max-width: 480px;
  font-size: .875rem;
  font-weight: 400;
  height: fit-content;
  pointer-events: auto;
  transform: translateY(calc(100% - 16px));
  filter: opacity(0);
  transition: transform .2s, filter .2s;
  transition-timing-function: ease-out;
}
.wrapper.show .container{
  transform: translateY(0%);
  filter: opacity(1);
}
:host([type=error]) .container{
  background: var(--s-color-error, #ba1a1a);
  color: var(--s-color-on-error, #ffffff);
}
.error,
:host([type=error]) .hint{
  display: none;
}
:host([type=error]) .error{
  display: block;
}
.icon{
  width: 24px;
  height: 24px;
  flex-shrink: 0;
  fill: currentColor;
  margin-left: 16px;
  margin-right: -4px;
}
.text{
  margin: 12px 16px;
  flex-grow: 1;
  user-select: text;
  -webkit-user-select: text;
}
::slotted([slot=action]){
  font-size: inherit;
  flex-shrink: 0;
  display: inline-flex;
  align-items: center;
  padding: 0 12px;
  border-radius: 4px;
  color: var(--s-color-inverse-primary, #c0c1ff);
  margin-right: 8px;
  margin-left: -8px;
  cursor: pointer;
  height: 36px;
  font-size: .875rem;
}
:host([type=error]) ::slotted([slot=action]){
  color: var(--s-color-on-error, #ffffff);
}
@media (max-width: 320px){
  .wrapper{
    padding: 8px;
  }
  .container{
    min-width: 100%;
  }
}
@media (pointer: coarse){
  .wrapper{
    align-items: flex-start;
    --offset-direction: 1;
  }
  .container{
    transform: translateY(calc(-100% - 16px));
    min-width: 240px;
  }
}
`,template:`
<slot name="trigger"></slot>
<div class="wrapper" part="wrapper">
  <div class="container" part="container">
    <svg class="icon hint" viewBox="0 -960 960 960">
      <path d="M480-280q17 0 28.5-11.5T520-320q0-17-11.5-28.5T480-360q-17 0-28.5 11.5T440-320q0 17 11.5 28.5T480-280Zm-40-160h80v-240h-80v240Zm40 360q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"></path>
    </svg>
    <svg class="icon error" viewBox="0 -960 960 960">
      <path d="m336-280 144-144 144 144 56-56-144-144 144-144-56-56-144 144-144-144-56 56 144 144-144 144 56 56ZM480-80q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z"></path>
    </svg>
    <div class="text" part="text">
      <slot></slot>
    </div>
    <slot name="action"></slot>
  </div>
</div>
`,props:{type:"basic",duration:4e3},syncProps:["type"],setup(r){var e=r.querySelector("slot[name=trigger]");const s=r.querySelector(".wrapper"),i=r.querySelector(".container");var t=r.querySelector("slot[name=action]");const a={timer:0,task:null};var o=()=>{if(!s.classList.contains("show")){var t=p(r);0===t.top&&0===t.left||(s.style.width=innerWidth+"px",s.style.height=innerHeight+"px",s.style.top=0-t.top+"px",s.style.left=0-t.left+"px");let e=i.offsetHeight+8;if(0<M.length)for(const o of M)o.wrapper.style.setProperty("--offset",e+"px"),e+=o.height+8;M.unshift(a.task={height:i.offsetHeight,wrapper:s}),s.classList.add("show"),this.dispatchEvent(new Event("show")),0<this.duration&&(a.timer=setTimeout(n,this.duration))}};const n=()=>{if(s.classList.contains("show")){clearTimeout(a.timer),s.classList.remove("show"),this.dispatchEvent(new Event("dismiss"));var t=M.indexOf(a.task);for(let e=t+1;e<M.length;e++){var o=M[e],r=Number(o.wrapper.style.getPropertyValue("--offset").slice(0,-2));o.wrapper.style.setProperty("--offset",r-8-i.offsetHeight+"px")}M.splice(t,1)}};return e.addEventListener("click",o),i.addEventListener("transitionend",e=>{"transform"!==e.propertyName||(e=s.classList.contains("show"),this.dispatchEvent(new Event(e?"showed":"dismissed")),e)||s.removeAttribute("style")}),t.addEventListener("click",n),{expose:{show:o,dismiss:n}}}}){static show=e=>{let t=document.body;const o=new H;o.style.display="block";var r=document.body.firstElementChild;return r&&"S-PAGE"===r.tagName&&(t=r),"string"==typeof e?o.textContent=e:(e.root&&(t=e.root),o.textContent=e.text,o.type=e.type??"basic",e.action&&((r=document.createElement("s-button")).type="text",r.slot="action","string"==typeof e.action?r.textContent=e.action:(r.textContent=e.action.text,r.addEventListener("click",e.action.click)),o.appendChild(r)),"number"==typeof e.duration&&(o.duration=e.duration)),t.appendChild(o),o.addEventListener("dismissed",()=>t.removeChild(o)),requestAnimationFrame(o.show),o}}H.define("s-snackbar");class se extends e({style:`
:host{
  display: inline-flex;
  vertical-align: middle;
  align-items: center;
  cursor: pointer;
  position: relative;
  color: var(--s-color-primary, #5256a9);
  width: 52px;
  aspect-ratio: 1.625;
  -webkit-aspect-ratio: 1.625;
  border-radius: 26px;
}
:host([disabled=true]){
  pointer-events: none;
}
.track{
  width: 100%;
  height: 100%;
  border: solid 2px var(--s-color-outline, #777680);
  background: var(--s-color-surface-container-highest, #e5e1e6);
  box-sizing: border-box;
  border-radius: inherit;
}
:host([disabled=true]) .track{
  background: none;
  border-color: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 12%, transparent) !important;
}
:host([checked=true]) .track{
  border-width: 0;
  background: currentColor;
}
:host([disabled=true][checked=true]) .track{
  background: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 12%, transparent) !important;
}
.ripple{
  height: 125%;
  width: auto;
  aspect-ratio: 1;
  -webkit-aspect-ratio: 1;
  border-radius: 50%;
  top: auto;
  transition: transform .1s ease-out;
  display: flex;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  color: var(--s-color-outline, #777680);
  transform: translateX(-10%);
}
:host([checked=true]) .ripple{
  transform: translateX(40%);
  color: currentColor;
}
.thumb{
  background: var(--s-color-outline, #777680);
  border-radius: 50%;
  width: 40%;
  height: 40%;
  transition: transform .1s, box-shadow .1s;
  transition-timing-function: ease-out;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}
:host([disabled=true]) .thumb{
  background: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 38%, transparent);
}
:host([checked=true]) .thumb{
  background: var(--s-color-on-primary, #ffffff);
  transform: scale(1.5);
  box-shadow: var(--s-elevation-level1, 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12));
}
:host([disabled=true][checked=true]) .thumb{
  background: var(--s-color-surface, #fffbff);
  box-shadow: none;
}
.icon{
  width: 70%;
  height: 70%;
  fill: currentColor;
  opacity: 0;
  transition: opacity .1s ease-out;
}
:host([checked=true]) .icon{
  opacity: 1;
}
:host([checked=true][disabled=true]) .icon{
  fill: color-mix(in srgb, var(--s-color-on-surface, #1c1b1f) 12%, transparent);
}
`,template:`
<div class="track" part="track"></div>
<s-ripple attached="true" centered="true" class="ripple" part="ripple">
  <div class="thumb" part="thumb">
    <svg class="icon" viewBox="0 -960 960 960">
      <path d="M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z"></path>
    </svg>
  </div>
</s-ripple>
`,props:{disabled:!1,checked:!1},syncProps:!0,setup(){this.addEventListener("click",()=>{this.checked=!this.checked,this.dispatchEvent(new Event("change"))})}}){}se.define("s-switch");const ie="s-tab";class $ extends e({style:`
:host{
  display: flex;
  justify-content: center;
  position: relative;
  background: var(--s-color-surface, #fffbff);
  color: var(--s-color-on-surface-variant, #46464f);
}
:host::before{
  content: '';
  position: absolute;
  width: 100%;
  height: 1px;
  background: var(--s-color-surface-variant, #e4e1ec);
  bottom: 0;
  left: 0;
}
.container{
  display: flex;
  justify-content: flex-start;
  align-items: center;
  position: relative;
  scrollbar-width: none;
  overflow-x: auto;
}
.container::-webkit-scrollbar{
  display: none;
}
:host([mode=fixed]) .container{
  overflow: hidden;
  width: 100%;
}
::slotted(s-tab-item){
  flex-shrink: 0;
  flex-basis: auto;
}
:host([mode=fixed]) ::slotted(s-tab-item){
  flex-basis: 100%;
  flex-shrink: 1;
}
`,template:`
<div class="container" part="container">
  <slot></slot>
</div>
`,props:{mode:"scrollable",value:""},syncProps:["mode"],setup(e){var t=e.querySelector("slot");const r=e.querySelector(".container"),s=new g({context:this,selectClass:j,slot:t});let i;return s.onUpdate=()=>{var e,t,o;this.isConnected&&s.select?(r.scrollWidth!==r.offsetWidth&&(e=s.select.offsetLeft-r.offsetLeft-r.offsetWidth/2+s.select.offsetWidth/2,r.scrollTo({left:e,behavior:"smooth"})),i&&(e=i.indicator.getBoundingClientRect(),t=s.select.indicator.getBoundingClientRect(),o={duration:200,easing:"ease-out"},s.select.indicator.animate([{opacity:0},{opacity:0}],o),i.indicator.animate([{filter:"opacity(1)",transform:"translateX(0)"},{filter:"opacity(1)",transform:`translateX(${t.left-e.left}px)`,width:t.width+"px"}],o)),s.select&&(i=s.select)):i=void 0},{expose:{get value(){return s.value},set value(e){s.value=e},get options(){return s.selects},get selectedIndex(){return s.selectedIndex}}}}}){}class j extends e({style:`
:host{
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 48px;
  position: relative;
  cursor: pointer;
  font-size: .875rem;
  font-weight: 500;
  text-transform: capitalize;
  padding: 0 16px;
}
:host([selected=true]){
  color: var(--s-color-primary, #5256a9);
}
.container{
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  position: relative;
  min-height: inherit;
}
.indicator{
  position: absolute;
  left: 0;
  bottom: 0;
  height: 3px;
  width: 100%;
  background: var(--s-color-primary, #5256a9);
  border-radius: 1.5px 1.5px 0 0;
  filter: opacity(0);
}
:host([selected=true]) .indicator{
  filter: opacity(1);
}
.text{
  display: flex;
  align-items: center;
  line-height: 1;
}
.badge{
  display: flex;
  align-items: center;
}
.icon .badge{
  position: absolute;
  top: 8px;
  left: 50%;
  width: 50%;
  justify-content: center;
  margin-left: 0;
}
::slotted([slot=icon]){
  width: 24px;
  height: 24px;
  color: currentColor;
  fill: currentColor;
  margin: 10px 0;
}
::slotted([slot=text]){
  white-space: nowrap;
  text-overflow: ellipsis;
  line-height: 1;
}
.icon ::slotted([slot=text]){
  margin-top: -6px;
  height: 26px;
}
::slotted([slot=badge]){
  margin-left: 4px;
}
`,template:`
<div class="container" part="container">
  <slot name="icon"></slot>
  <div class="text" part="text">
    <slot name="text"></slot>
    <div class="badge" part="badge">
      <slot name="badge"></slot>
    </div>
  </div>
  <div class="indicator" part="indicator"></div>
</div>
<s-ripple attached="true" part="ripple"></s-ripple>
`,props:{selected:!1,value:""},syncProps:["selected"],setup(e){const t=e.querySelector(".container");var o=e.querySelector(".indicator");const r=e.querySelector("[name=icon]");return r.addEventListener("slotchange",()=>{var e=r.assignedElements().length;t.classList[0<e?"add":"remove"]("icon")}),this.addEventListener("click",()=>{this.parentNode instanceof $&&!this.selected&&this.dispatchEvent(new Event("s-tab:select",{bubbles:!0}))}),{expose:{indicator:o},props:{selected:()=>{this.parentNode instanceof $&&this.dispatchEvent(new Event("s-tab:update",{bubbles:!0}))}}}}}){}$.define(ie),j.define("s-tab-item");class ae extends e({style:`
:host{
  display: block;
  font-size: .875rem;
  border: solid 1px var(--s-color-outline-variant, #c7c5d0);
  background: var(--s-color-surface-container-low, #f6f2f7);
  border-radius: 8px;
  white-space: nowrap;
  overflow: hidden;
}
.container{
  display: table;
  width: 100%;
  border-collapse: collapse;
}
`,template:`
<div class="container" part="container">
  <slot></slot>
</div>
`,props:{}}){}class ne extends e({style:`
:host{
  display: table-header-group;
  font-weight: 600;
  color: var(--s-color-on-surface-variant, #46464f);
}
`,template:"<slot></slot>",props:{}}){}class le extends e({style:`
:host{
  display: table-row-group;
  color: var(--s-color-on-surface, #1c1b1f);
  position: relative;
}
::slotted(s-tr:nth-child(odd)){
  background: var(--s-color-surface-container-lowest, #ffffff);
}
`,template:"<slot></slot>",props:{}}){}class de extends e({style:`
:host{
  display: table-row;
}
::slotted(*:first-child){
  width: 0;
}
`,template:"<slot></slot>",props:{}}){}class ce extends e({style:`
:host{
  display: table-cell;
  padding: 16px;
}
`,template:"<slot></slot>",props:{}}){}class pe extends e({style:`
:host{
  display: table-cell;
  user-select: text;
  padding: 12px 16px;
}
`,template:"<slot></slot>",props:{}}){}ae.define("s-table"),ne.define("s-thead"),le.define("s-tbody"),de.define("s-tr"),ce.define("s-th"),pe.define("s-td");class he extends e({style:`
:host{
  display: inline-grid;
  vertical-align: middle;
  font-size: .875rem;
  line-height: 16px;
  min-width: 280px;
  min-height: var(--text-field-height);
  color: var(--s-color-on-surface, #1c1b1f);
  --text-field-border-radius: 4px;
  --text-field-border-color: var(--s-color-outline, #777680);
  --text-field-padding: 16px;
  --text-field-height: 48px;
}
:host([disabled=true]){
  pointer-events: none;
  opacity: .38;
}
.container{
  display: block;
  height: 100%;
  font-size: inherit;
  --field-border-radius: var(--text-field-border-radius);
  --field-border-color: var(--text-field-border-color);
  --field-padding: var(--text-field-padding);
}
:host([error=true]) .container{
  --s-color-primary: var(--s-color-error, #ba1a1a);
  --field-border-color: var(--s-color-error, #ba1a1a);
  --field-border-width: 2px;
}
.label{
  height: var(--text-field-height);
}
.multi .label{
  height: calc(var(--text-field-padding) * 2 + 1em);
}
.view{
  flex-grow: 1;
  padding: 0;
  flex-direction: column;
}
::slotted(input),
::slotted(textarea){
  border: none;
  height: 100%;
  width: 100%;
  padding: 0 var(--text-field-padding);
  background: none;
  outline: none;
  font-size: inherit;
  color: inherit;
  box-sizing: border-box;
  line-height: 1;
  font-family: inherit;
  display: block;
}
::slotted(textarea){
  resize: none;
  scrollbar-width: none;
  line-height: inherit;
  word-wrap: break-word;
  word-break: break-all;
  white-space: pre-wrap;
  min-height: 100%;
  padding: var(--text-field-padding);
  height: 0;
}
::slotted(input)::placeholder,
::slotted(textarea)::placeholder{
  color: var(--text-field-border-color);
}
.shadow{
  width: 100%;
  height: 0;
  pointer-events: none;
  display: none;
  position: relative;
}
.multi .shadow{
  display: block;
}
.shadow>span{
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  display: block;
  box-sizing: border-box;
  line-height: inherit;
  word-wrap: break-word;
  word-break: break-all;
  white-space: pre-wrap;
  padding: var(--text-field-padding);
  height: auto;
  visibility: hidden;
  pointer-events: none;
}
.shadow>span::after{
  content: ' ';
}
::slotted(svg){
  fill: var(--s-color-on-surface-variant, #46464f);
  height: 24px;
  width: 24px;
}
::slotted(s-icon-button[slot=start]){
  margin-left: 4px;
  margin-right: calc(var(--text-field-border-radius) - var(--text-field-padding) + 4px);
}
::slotted(s-icon-button[slot=end]){
  margin-right: 4px;
  margin-left: calc(var(--text-field-border-radius) - var(--text-field-padding) + 4px);
}
::slotted(s-icon[slot=start]),
::slotted(svg[slot=start]){
  margin-left: 12px;
  margin-right: calc(var(--text-field-border-radius) - var(--text-field-padding) + 8px);
}
::slotted(s-icon[slot=end]),
::slotted(svg[slot=end]){
  margin-right: 12px;
  margin-left: calc(var(--text-field-border-radius) - var(--text-field-padding) + 8px);
}
`,template:`
<s-field class="container" labelFixed="false">
  <div slot="label" class="label"></div>
  <div slot="view" class="view">
    <div class="shadow">
      <span></span>
    </div>
    <slot id="inputSlot"></slot>
  </div>
  <slot slot="start" name="start"></slot>
  <slot slot="end" name="end"></slot>
</s-field>
`,props:{label:"",disabled:!1,error:!1},syncProps:["disabled","error"],setup(e){const t=e.querySelector(".container"),o=e.querySelector(".label"),r=e.querySelector("#inputSlot"),s=e.querySelector(".shadow>span");let i,a=void 0;const n=()=>{""!==i.value&&(t.labelFixed=!0),i instanceof HTMLTextAreaElement&&(s.textContent=i.value,i.offsetHeight!==s.offsetHeight)&&(i.style.height=s.offsetHeight+"px")},l=new MutationObserver(n),d=()=>{t.labelFixed=!0,t.focused=!0},c=()=>{""===i.value&&(t.labelFixed=!1),t.focused=!1};return r.addEventListener("slotchange",()=>{var[e]=r.assignedElements();e&&(e instanceof HTMLInputElement||e instanceof HTMLTextAreaElement)?(e instanceof HTMLTextAreaElement?t.classList.add("multi"):t.classList.remove("multi"),i=e,(e=Object.getOwnPropertyDescriptor(Object.getPrototypeOf(i),"value"))&&(a=e.set,e.set=e=>{a?.apply(i,[e]),n()},Object.defineProperty(i,"value",e)),n(),i.addEventListener("input",n),i.addEventListener("focus",d),i.addEventListener("blur",c),l.observe(i,{attributeFilter:["value"]})):i&&(i.removeEventListener("input",n),i.removeEventListener("focus",d),i.removeEventListener("blur",c),(e=Object.getOwnPropertyDescriptor(Object.getPrototypeOf(i),"value"))&&a&&(e.set=a),i=void 0,s.textContent="")}),{props:{label:e=>o.textContent=e}}}}){}he.define("s-text-field");class fe extends e({style:`
:host{
  display: inline-flex;
  vertical-align: middle;
}
.container{
  position: fixed;
  left: 0;
  top: 100%;
  z-index: var(--z-index, 1);
  background: var(--s-color-inverse-surface, #313034);
  color: var(--s-color-inverse-on-surface, #f3eff4);
  font-size: .875rem;
  font-weight: 400;
  padding: 6px 8px;
  border-radius: 4px;
  white-space: nowrap;
  opacity: .85;
  filter: opacity(0);
  transition: filter .1s ease-out;
  pointer-events: none;
  --z-index: var(--z-index, 1);
}
.container.show{
  filter: opacity(1);
}
slot[name=trigger]{
  display: block;
}
::slotted(img){
  display: block;
  border-radius: 4px;
  margin: 2px 0;
}
::slotted([slot=trigger]){
  margin: 0;
}
`,template:`
<slot name="trigger" part="trigger"></slot>
<div class="container" part="container">
  <slot></slot>
</div>
`,props:{},setup(i){const a=i.querySelector("slot[name=trigger]"),n=i.querySelector(".container"),e={timer:0},t=(e="bottom")=>{var t,o,r,s;this.isConnected&&!n.classList.contains("show")&&(t=a.getBoundingClientRect(),o=p(i),r=n.offsetWidth,s=n.offsetHeight,(e={top:{top:t.top-4-s,bottom:t.top+a.offsetHeight+4}[e],left:t.left-(r-t.width)/2}).left<0&&(e.left=t.left),e.left+r>innerWidth&&(e.left=t.left+t.width-r),e.top+s>innerHeight&&(e.top=t.top-4-s),e.top<0&&(e.top=t.top+a.offsetHeight+4),n.setAttribute("style",`left: ${e.left-o.left}px;top: ${e.top-o.top}px`),n.classList.add("show"))},o=()=>{this.isConnected&&n.classList.contains("show")&&n.classList.remove("show")};return a.addEventListener("wheel",o,{passive:!0}),a.addEventListener("mouseover",()=>!l.touched&&t(),{passive:!0}),a.addEventListener("mouseleave",()=>!l.touched&&o(),{passive:!0}),a.addEventListener("touchstart",()=>{clearTimeout(e.timer),e.timer=setTimeout(()=>t("top"),600)},{passive:!0}),a.addEventListener("touchend",()=>{clearTimeout(e.timer),o()},{passive:!0}),n.addEventListener("transitionend",()=>{n.classList.contains("show")||n.removeAttribute("style")}),{expose:{show:t,dismiss:o}}}}){}return fe.define("s-tooltip"),Object.freeze({__proto__:null,Appbar:t,Badge:o,BottomSheet:Z,Button:i,Card:a,Carousel:N,Checkbox:_,Chip:A,CircularProgress:B,Dialog:h,Divider:W,Drawer:O,FAB:F,Field:U,Fold:Q,Icon:Y,IconButton:X,LinearProgress:D,Menu:V,MenuItem:G,Navigation:y,NavigationItem:w,Page:J,Picker:q,PickerItem:L,Popup:R,PopupMenu:C,PopupMenuItem:K,RadioButton:ee,Rate:te,Ripple:s,ScrollView:I,Search:oe,SegmentedButton:z,SegmentedButtonItem:P,Slider:re,Snackbar:H,Switch:se,Tab:$,TabItem:j,Table:ae,Tbody:le,Td:pe,TextField:he,Th:ce,Thead:ne,Tooltip:fe,Tr:de})});
//# sourceMappingURL=sober.min.js.map
